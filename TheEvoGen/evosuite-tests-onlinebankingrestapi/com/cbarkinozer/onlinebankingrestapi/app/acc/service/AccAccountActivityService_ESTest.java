/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:09:07 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.acc.service;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.cbarkinozer.onlinebankingrestapi.app.acc.dto.AccMoneyActivityDto;
import com.cbarkinozer.onlinebankingrestapi.app.acc.dto.AccMoneyActivityRequestDto;
import com.cbarkinozer.onlinebankingrestapi.app.acc.enums.AccAccountActivityType;
import com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService;
import com.cbarkinozer.onlinebankingrestapi.app.acc.service.entityservice.AccAccountActivityEntityService;
import com.cbarkinozer.onlinebankingrestapi.app.acc.service.entityservice.AccAccountEntityService;
import java.math.BigDecimal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) 
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccAccountActivityService_ESTest extends AccAccountActivityService_ESTest_scaffolding {

    /**
     * Test withdraw method with null AccMoneyActivityRequestDto.
     * Verifies that it throws NullPointerException.
     */
    @Test(timeout = 4000)
    public void testWithdraw_WithNullRequestDto_ShouldThrowNullPointerException() throws Throwable {
        AccAccountValidationService validationService = new AccAccountValidationService(null, null);
        AccAccountActivityService service = new AccAccountActivityService(null, null, validationService);
        AccMoneyActivityRequestDto requestDto = new AccMoneyActivityRequestDto();
        try {
            service.withdraw(requestDto);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
        }
    }

    /**
     * Test moneyOut method with null AccMoneyActivityDto.
     * Verifies that it throws NullPointerException.
     */
    @Test(timeout = 4000)
    public void testMoneyOut_WithNullActivityDto_ShouldThrowNullPointerException() throws Throwable {
        AccAccountValidationService validationService = new AccAccountValidationService(null, null);
        AccAccountActivityService service = new AccAccountActivityService(null, null, validationService);
        AccMoneyActivityDto activityDto = mock(AccMoneyActivityDto.class, new ViolatedAssumptionAnswer());
        doReturn(null).when(activityDto).getAccountId();
        doReturn(null).when(activityDto).getActivityType();
        doReturn(null).when(activityDto).getAmount();
        try {
            service.moneyOut(activityDto);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountActivityService", e);
        }
    }

    /**
     * Test moneyIn method with null AccMoneyActivityDto.
     * Verifies that it throws NullPointerException.
     */
    @Test(timeout = 4000)
    public void testMoneyIn_WithNullActivityDto_ShouldThrowNullPointerException() throws Throwable {
        AccAccountValidationService validationService = new AccAccountValidationService(null, null);
        AccAccountActivityService service = new AccAccountActivityService(null, null, validationService);
        AccMoneyActivityDto activityDto = mock(AccMoneyActivityDto.class, new ViolatedAssumptionAnswer());
        doReturn(null).when(activityDto).getAccountId();
        doReturn(null).when(activityDto).getActivityType();
        doReturn(null).when(activityDto).getAmount();
        try {
            service.moneyIn(activityDto);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountActivityService", e);
        }
    }

    /**
     * Test deposit method with null AccMoneyActivityRequestDto.
     * Verifies that it throws NullPointerException.
     */
    @Test(timeout = 4000)
    public void testDeposit_WithNullRequestDto_ShouldThrowNullPointerException() throws Throwable {
        AccAccountValidationService validationService = new AccAccountValidationService(null, null);
        AccAccountActivityService service = new AccAccountActivityService(null, null, validationService);
        AccMoneyActivityRequestDto requestDto = new AccMoneyActivityRequestDto();
        try {
            service.deposit(requestDto);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
        }
    }

    /**
     * Test withdraw method with null AccMoneyActivityRequestDto.
     * Verifies that it throws RuntimeException.
     */
    @Test(timeout = 4000)
    public void testWithdraw_WithNullRequest_ShouldThrowRuntimeException() throws Throwable {
        AccAccountValidationService validationService = new AccAccountValidationService(null, null);
        AccAccountActivityService service = new AccAccountActivityService(null, null, validationService);
        try {
            service.withdraw(null);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
        }
    }

    /**
     * Test moneyOut method with null AccMoneyActivityDto.
     * Verifies that it throws RuntimeException.
     */
    @Test(timeout = 4000)
    public void testMoneyOut_WithNullDto_ShouldThrowRuntimeException() throws Throwable {
        AccAccountValidationService validationService = new AccAccountValidationService(null, null);
        AccAccountActivityService service = new AccAccountActivityService(null, null, validationService);
        try {
            service.moneyOut(null);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
        }
    }

    /**
     * Test deposit method with null AccMoneyActivityRequestDto.
     * Verifies that it throws RuntimeException.
     */
    @Test(timeout = 4000)
    public void testDeposit_WithNullRequest_ShouldThrowRuntimeException() throws Throwable {
        AccAccountValidationService validationService = new AccAccountValidationService(null, null);
        AccAccountActivityService service = new AccAccountActivityService(null, null, validationService);
        try {
            service.deposit(null);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
        }
    }

    /**
     * Test moneyIn method with null AccMoneyActivityDto.
     * Verifies that it throws RuntimeException.
     */
    @Test(timeout = 4000)
    public void testMoneyIn_WithNullDto_ShouldThrowRuntimeException() throws Throwable {
        AccAccountValidationService validationService = new AccAccountValidationService(null, null);
        AccAccountActivityService service = new AccAccountActivityService(null, null, validationService);
        try {
            service.moneyIn(null);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
        }
    }
}