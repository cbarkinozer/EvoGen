/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:09:51 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.acc.service;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.cbarkinozer.onlinebankingrestapi.app.acc.dto.AccMoneyActivityDto;
import com.cbarkinozer.onlinebankingrestapi.app.acc.dto.AccMoneyActivityRequestDto;
import com.cbarkinozer.onlinebankingrestapi.app.acc.dto.AccMoneyTransferSaveDto;
import com.cbarkinozer.onlinebankingrestapi.app.acc.entity.AccAccount;
import com.cbarkinozer.onlinebankingrestapi.app.acc.enums.AccAccountType;
import com.cbarkinozer.onlinebankingrestapi.app.acc.enums.AccCurrencyType;
import com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService;
import com.cbarkinozer.onlinebankingrestapi.app.acc.service.entityservice.AccAccountEntityService;
import com.cbarkinozer.onlinebankingrestapi.app.cus.service.entityservice.CusCustomerEntityService;
import com.cbarkinozer.onlinebankingrestapi.app.gen.enums.GenStatusType;
import java.math.BigDecimal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccAccountValidationService_ESTest extends AccAccountValidationService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      accAccountValidationService0.controlIsBalanceNotNegative(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      AccAccount accAccount0 = new AccAccount();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      accAccount0.setCurrentBalance(bigDecimal0);
      accAccountValidationService0.controlIsBalanceNotNegative(accAccount0);
      assertNull(accAccount0.getAccountType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      AccAccount accAccount0 = new AccAccount();
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlIsIbanNoUnique(accAccount0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlIsCustomerExist((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlIsBalanceNotNegative((BigDecimal) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      AccAccount accAccount0 = new AccAccount();
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlIsBalanceNotNegative(accAccount0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlIsAmountPositive((BigDecimal) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlIsAccountIdExist((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlIsAmountPositive(bigDecimal0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      accAccountValidationService0.controlIsAmountPositive(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlIsMoneyTransferSaveDtoIsNull((AccMoneyTransferSaveDto) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      accAccountValidationService0.controlIsMoneyTransferSaveDtoIsNull(accMoneyTransferSaveDto0);
      assertNull(accMoneyTransferSaveDto0.getAccountIdFrom());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlIsMoneyActivityDtoNotNull((AccMoneyActivityDto) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      AccMoneyActivityDto accMoneyActivityDto0 = mock(AccMoneyActivityDto.class, new ViolatedAssumptionAnswer());
      accAccountValidationService0.controlIsMoneyActivityDtoNotNull(accMoneyActivityDto0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlIsMoneyActivityRequestDtoNotNull((AccMoneyActivityRequestDto) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      AccMoneyActivityRequestDto accMoneyActivityRequestDto0 = new AccMoneyActivityRequestDto();
      accAccountValidationService0.controlIsMoneyActivityRequestDtoNotNull(accMoneyActivityRequestDto0);
      assertEquals("AccMoneyActivityRequestDto(accountId=null, amount=null)", accMoneyActivityRequestDto0.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      BigDecimal bigDecimal0 = new BigDecimal((-37L));
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlIsBalanceNotNegative(bigDecimal0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      accAccountValidationService0.controlIsBalanceNotNegative(bigDecimal0);
      assertEquals((byte)10, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      AccAccount accAccount0 = new AccAccount();
      accAccount0.setCurrentBalance(bigDecimal0);
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlIsBalanceNotNegative(accAccount0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      accAccount0.setCurrentBalance(bigDecimal0);
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      accAccountValidationService0.controlIsBalanceNotNegative(accAccount0);
      assertNull(accAccount0.getId());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      accAccount0.setCurrentBalance(bigDecimal0);
      accAccount0.setIbanNo("wUzRq3G(KE[JPG=3`F");
      AccAccountType accAccountType0 = AccAccountType.DEPOSIT;
      accAccount0.setAccountType(accAccountType0);
      GenStatusType genStatusType0 = GenStatusType.ACTIVE;
      accAccount0.setStatusType(genStatusType0);
      Long long0 = new Long(23L);
      accAccount0.setCustomerId(long0);
      AccCurrencyType accCurrencyType0 = AccCurrencyType.EURO;
      accAccount0.setCurrencyType(accCurrencyType0);
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      accAccountValidationService0.controlAreFieldsNotNull(accAccount0);
      assertEquals(AccAccountType.DEPOSIT, accAccount0.getAccountType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      accAccount0.setCurrentBalance(bigDecimal0);
      accAccount0.setIbanNo("wUzRq3G(KE[JPG=3`F");
      AccAccountType accAccountType0 = AccAccountType.DEPOSIT;
      accAccount0.setAccountType(accAccountType0);
      Long long0 = new Long(23L);
      accAccount0.setCustomerId(long0);
      AccCurrencyType accCurrencyType0 = AccCurrencyType.EURO;
      accAccount0.setCurrencyType(accCurrencyType0);
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlAreFieldsNotNull(accAccount0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      accAccount0.setCurrentBalance(bigDecimal0);
      accAccount0.setIbanNo("wUzRq3G(KE[JPG=3`F");
      Long long0 = new Long(23L);
      accAccount0.setCustomerId(long0);
      AccCurrencyType accCurrencyType0 = AccCurrencyType.EURO;
      accAccount0.setCurrencyType(accCurrencyType0);
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlAreFieldsNotNull(accAccount0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      accAccount0.setCurrentBalance(bigDecimal0);
      accAccount0.setIbanNo("wUzRq3G(KE[JPG=3`F");
      Long long0 = new Long(23L);
      accAccount0.setCustomerId(long0);
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlAreFieldsNotNull(accAccount0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      accAccount0.setIbanNo("wUzRq3G(KE[JPG=3`F");
      Long long0 = new Long(23L);
      accAccount0.setCustomerId(long0);
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlAreFieldsNotNull(accAccount0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      AccAccount accAccount0 = new AccAccount();
      Long long0 = new Long(1L);
      accAccount0.setCustomerId(long0);
      accAccount0.setIbanNo("");
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlAreFieldsNotNull(accAccount0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      Long long0 = new Long(23L);
      accAccount0.setCustomerId(long0);
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlAreFieldsNotNull(accAccount0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AccAccountValidationService accAccountValidationService0 = new AccAccountValidationService((AccAccountEntityService) null, (CusCustomerEntityService) null);
      AccAccount accAccount0 = new AccAccount();
      // Undeclared exception!
      try { 
        accAccountValidationService0.controlAreFieldsNotNull(accAccount0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cbarkinozer.onlinebankingrestapi.app.acc.service.AccAccountValidationService", e);
      }
  }
}
