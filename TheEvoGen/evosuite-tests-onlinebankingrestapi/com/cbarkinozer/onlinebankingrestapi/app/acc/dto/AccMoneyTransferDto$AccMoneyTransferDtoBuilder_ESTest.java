/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:07:11 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.acc.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import com.cbarkinozer.onlinebankingrestapi.app.acc.dto.AccMoneyTransferDto;
import com.cbarkinozer.onlinebankingrestapi.app.acc.enums.AccMoneyTransferType;
import java.math.BigDecimal;
import java.time.LocalDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccMoneyTransferDto$AccMoneyTransferDtoBuilder_ESTest extends AccMoneyTransferDto$AccMoneyTransferDtoBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      String string0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.toString();
      assertEquals("AccMoneyTransferDto.AccMoneyTransferDtoBuilder(accountIdFrom=null, accountIdTo=null, amount=null, transferDate=null, description=null, transferType=null)", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      assertNull(accMoneyTransferDto0.getDescription());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.description("");
      assertSame(accMoneyTransferDto_AccMoneyTransferDtoBuilder0, accMoneyTransferDto_AccMoneyTransferDtoBuilder1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      Long long0 = new Long(0L);
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.accountIdFrom(long0);
      assertEquals("AccMoneyTransferDto.AccMoneyTransferDtoBuilder(accountIdFrom=0, accountIdTo=null, amount=null, transferDate=null, description=null, transferType=null)", accMoneyTransferDto_AccMoneyTransferDtoBuilder1.toString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      LocalDate localDate0 = MockLocalDate.now();
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.transferDate(localDate0);
      assertSame(accMoneyTransferDto_AccMoneyTransferDtoBuilder1, accMoneyTransferDto_AccMoneyTransferDtoBuilder0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      Long long0 = new Long(0L);
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.accountIdTo(long0);
      assertSame(accMoneyTransferDto_AccMoneyTransferDtoBuilder0, accMoneyTransferDto_AccMoneyTransferDtoBuilder1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.DUE;
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.transferType(accMoneyTransferType0);
      assertSame(accMoneyTransferDto_AccMoneyTransferDtoBuilder0, accMoneyTransferDto_AccMoneyTransferDtoBuilder1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.amount(bigDecimal0);
      assertEquals("AccMoneyTransferDto.AccMoneyTransferDtoBuilder(accountIdFrom=null, accountIdTo=null, amount=0, transferDate=null, description=null, transferType=null)", accMoneyTransferDto_AccMoneyTransferDtoBuilder1.toString());
  }
}
