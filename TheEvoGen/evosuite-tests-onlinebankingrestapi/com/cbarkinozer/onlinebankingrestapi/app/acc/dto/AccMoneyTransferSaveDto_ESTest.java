/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:08:30 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.acc.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import com.cbarkinozer.onlinebankingrestapi.app.acc.dto.AccMoneyTransferSaveDto;
import com.cbarkinozer.onlinebankingrestapi.app.acc.enums.AccMoneyTransferType;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccMoneyTransferSaveDto_ESTest extends AccMoneyTransferSaveDto_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.RENTAL;
      accMoneyTransferSaveDto0.setTransferType(accMoneyTransferType0);
      AccMoneyTransferType accMoneyTransferType1 = accMoneyTransferSaveDto0.getTransferType();
      assertSame(accMoneyTransferType1, accMoneyTransferType0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      accMoneyTransferSaveDto0.setDescription("RENTAL");
      String string0 = accMoneyTransferSaveDto0.getDescription();
      assertEquals("RENTAL", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      accMoneyTransferSaveDto0.setDescription("");
      String string0 = accMoneyTransferSaveDto0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      BigDecimal bigDecimal0 = new BigDecimal((-3062.04458288));
      accMoneyTransferSaveDto0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = accMoneyTransferSaveDto0.getAmount();
      assertEquals((byte)10, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      accMoneyTransferSaveDto0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = accMoneyTransferSaveDto0.getAmount();
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      accMoneyTransferSaveDto0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = accMoneyTransferSaveDto0.getAmount();
      assertEquals((byte)1, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      BigDecimal bigDecimal0 = new BigDecimal(177);
      accMoneyTransferSaveDto0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = accMoneyTransferSaveDto0.getAmount();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      Long long0 = new Long(0L);
      accMoneyTransferSaveDto0.setAccountIdTo(long0);
      Long long1 = accMoneyTransferSaveDto0.getAccountIdTo();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      Long long0 = new Long(3713L);
      accMoneyTransferSaveDto0.setAccountIdTo(long0);
      Long long1 = accMoneyTransferSaveDto0.getAccountIdTo();
      assertEquals(3713L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      Long long0 = Long.getLong("gw)AUTMWF g", (-1L));
      accMoneyTransferSaveDto0.setAccountIdTo(long0);
      Long long1 = accMoneyTransferSaveDto0.getAccountIdTo();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      Long long0 = new Long(0L);
      accMoneyTransferSaveDto0.setAccountIdFrom(long0);
      Long long1 = accMoneyTransferSaveDto0.getAccountIdFrom();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      Long long0 = new Long(1320L);
      accMoneyTransferSaveDto0.setAccountIdFrom(long0);
      Long long1 = accMoneyTransferSaveDto0.getAccountIdFrom();
      assertEquals(1320L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      Long long0 = new Long((-1L));
      accMoneyTransferSaveDto0.setAccountIdFrom(long0);
      Long long1 = accMoneyTransferSaveDto0.getAccountIdFrom();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      boolean boolean0 = accMoneyTransferSaveDto0.canEqual(accMoneyTransferSaveDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      Object object0 = new Object();
      boolean boolean0 = accMoneyTransferSaveDto0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      accMoneyTransferSaveDto0.getTransferType();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      String string0 = accMoneyTransferSaveDto0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      BigDecimal bigDecimal0 = accMoneyTransferSaveDto0.getAmount();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      Long long0 = accMoneyTransferSaveDto0.getAccountIdFrom();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      Long long0 = accMoneyTransferSaveDto0.getAccountIdTo();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      AccMoneyTransferSaveDto accMoneyTransferSaveDto1 = new AccMoneyTransferSaveDto();
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.DUE;
      accMoneyTransferSaveDto0.setTransferType(accMoneyTransferType0);
      assertFalse(accMoneyTransferSaveDto0.equals((Object)accMoneyTransferSaveDto1));
      
      accMoneyTransferSaveDto1.setTransferType(accMoneyTransferType0);
      boolean boolean0 = accMoneyTransferSaveDto1.equals(accMoneyTransferSaveDto0);
      assertTrue(accMoneyTransferSaveDto0.equals((Object)accMoneyTransferSaveDto1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      AccMoneyTransferSaveDto accMoneyTransferSaveDto1 = new AccMoneyTransferSaveDto();
      assertTrue(accMoneyTransferSaveDto1.equals((Object)accMoneyTransferSaveDto0));
      
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.DUE;
      accMoneyTransferSaveDto0.setTransferType(accMoneyTransferType0);
      boolean boolean0 = accMoneyTransferSaveDto1.equals(accMoneyTransferSaveDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      accMoneyTransferSaveDto0.setDescription("p* L8 Ye*,86,E");
      AccMoneyTransferSaveDto accMoneyTransferSaveDto1 = new AccMoneyTransferSaveDto();
      assertFalse(accMoneyTransferSaveDto1.equals((Object)accMoneyTransferSaveDto0));
      
      accMoneyTransferSaveDto1.setDescription("p* L8 Ye*,86,E");
      boolean boolean0 = accMoneyTransferSaveDto0.equals(accMoneyTransferSaveDto1);
      assertTrue(accMoneyTransferSaveDto1.equals((Object)accMoneyTransferSaveDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      accMoneyTransferSaveDto0.setDescription("18Kl=");
      AccMoneyTransferSaveDto accMoneyTransferSaveDto1 = new AccMoneyTransferSaveDto();
      boolean boolean0 = accMoneyTransferSaveDto1.equals(accMoneyTransferSaveDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      AccMoneyTransferSaveDto accMoneyTransferSaveDto1 = new AccMoneyTransferSaveDto();
      assertTrue(accMoneyTransferSaveDto1.equals((Object)accMoneyTransferSaveDto0));
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      accMoneyTransferSaveDto1.setAmount(bigDecimal0);
      boolean boolean0 = accMoneyTransferSaveDto0.equals(accMoneyTransferSaveDto1);
      assertFalse(accMoneyTransferSaveDto1.equals((Object)accMoneyTransferSaveDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      AccMoneyTransferSaveDto accMoneyTransferSaveDto1 = new AccMoneyTransferSaveDto();
      assertTrue(accMoneyTransferSaveDto1.equals((Object)accMoneyTransferSaveDto0));
      
      accMoneyTransferSaveDto1.setAmount(bigDecimal0);
      boolean boolean0 = accMoneyTransferSaveDto1.equals(accMoneyTransferSaveDto0);
      assertFalse(accMoneyTransferSaveDto1.equals((Object)accMoneyTransferSaveDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      Long long0 = new Long(0L);
      accMoneyTransferSaveDto0.setAccountIdTo(long0);
      AccMoneyTransferSaveDto accMoneyTransferSaveDto1 = new AccMoneyTransferSaveDto();
      assertFalse(accMoneyTransferSaveDto1.equals((Object)accMoneyTransferSaveDto0));
      
      accMoneyTransferSaveDto1.setAccountIdTo(long0);
      boolean boolean0 = accMoneyTransferSaveDto1.equals(accMoneyTransferSaveDto0);
      assertTrue(accMoneyTransferSaveDto1.equals((Object)accMoneyTransferSaveDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      Long long0 = new Long(89L);
      accMoneyTransferSaveDto0.setAccountIdTo(long0);
      AccMoneyTransferSaveDto accMoneyTransferSaveDto1 = new AccMoneyTransferSaveDto();
      boolean boolean0 = accMoneyTransferSaveDto1.equals(accMoneyTransferSaveDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      AccMoneyTransferSaveDto accMoneyTransferSaveDto1 = new AccMoneyTransferSaveDto();
      assertTrue(accMoneyTransferSaveDto1.equals((Object)accMoneyTransferSaveDto0));
      
      Long long0 = new Long((-1752L));
      accMoneyTransferSaveDto1.setAccountIdTo(long0);
      boolean boolean0 = accMoneyTransferSaveDto1.equals(accMoneyTransferSaveDto0);
      assertFalse(accMoneyTransferSaveDto1.equals((Object)accMoneyTransferSaveDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      AccMoneyTransferSaveDto accMoneyTransferSaveDto1 = new AccMoneyTransferSaveDto();
      Long long0 = new Long((-160L));
      accMoneyTransferSaveDto0.setAccountIdFrom(long0);
      assertFalse(accMoneyTransferSaveDto0.equals((Object)accMoneyTransferSaveDto1));
      
      accMoneyTransferSaveDto1.setAccountIdFrom(long0);
      boolean boolean0 = accMoneyTransferSaveDto1.equals(accMoneyTransferSaveDto0);
      assertTrue(accMoneyTransferSaveDto0.equals((Object)accMoneyTransferSaveDto1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      AccMoneyTransferSaveDto accMoneyTransferSaveDto1 = new AccMoneyTransferSaveDto();
      assertTrue(accMoneyTransferSaveDto1.equals((Object)accMoneyTransferSaveDto0));
      
      Long long0 = new Long((-160L));
      accMoneyTransferSaveDto1.setAccountIdFrom(long0);
      boolean boolean0 = accMoneyTransferSaveDto1.equals(accMoneyTransferSaveDto0);
      assertFalse(accMoneyTransferSaveDto1.equals((Object)accMoneyTransferSaveDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      Long long0 = new Long(0L);
      boolean boolean0 = accMoneyTransferSaveDto0.equals(long0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      boolean boolean0 = accMoneyTransferSaveDto0.equals(accMoneyTransferSaveDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.RENTAL;
      accMoneyTransferSaveDto0.setTransferType(accMoneyTransferType0);
      accMoneyTransferSaveDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      accMoneyTransferSaveDto0.setDescription("Vd{l[Q~OLhEY");
      accMoneyTransferSaveDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      BigDecimal bigDecimal0 = new BigDecimal((-1115L));
      accMoneyTransferSaveDto0.setAmount(bigDecimal0);
      accMoneyTransferSaveDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      Long long0 = new Long(0L);
      accMoneyTransferSaveDto0.setAccountIdTo(long0);
      accMoneyTransferSaveDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      Long long0 = new Long(0L);
      accMoneyTransferSaveDto0.setAccountIdFrom(long0);
      accMoneyTransferSaveDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      Long long0 = new Long(1073L);
      accMoneyTransferSaveDto0.setAccountIdFrom(long0);
      AccMoneyTransferSaveDto accMoneyTransferSaveDto1 = new AccMoneyTransferSaveDto();
      boolean boolean0 = accMoneyTransferSaveDto1.equals(accMoneyTransferSaveDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      accMoneyTransferSaveDto0.setAmount(bigDecimal0);
      AccMoneyTransferSaveDto accMoneyTransferSaveDto1 = new AccMoneyTransferSaveDto();
      assertFalse(accMoneyTransferSaveDto1.equals((Object)accMoneyTransferSaveDto0));
      
      accMoneyTransferSaveDto1.setAmount(bigDecimal0);
      boolean boolean0 = accMoneyTransferSaveDto1.equals(accMoneyTransferSaveDto0);
      assertTrue(accMoneyTransferSaveDto1.equals((Object)accMoneyTransferSaveDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      accMoneyTransferSaveDto0.setDescription("$VALUES");
      AccMoneyTransferSaveDto accMoneyTransferSaveDto1 = new AccMoneyTransferSaveDto();
      boolean boolean0 = accMoneyTransferSaveDto0.equals(accMoneyTransferSaveDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.DUE;
      accMoneyTransferSaveDto0.setTransferType(accMoneyTransferType0);
      AccMoneyTransferSaveDto accMoneyTransferSaveDto1 = new AccMoneyTransferSaveDto();
      boolean boolean0 = accMoneyTransferSaveDto0.equals(accMoneyTransferSaveDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      AccMoneyTransferSaveDto accMoneyTransferSaveDto0 = new AccMoneyTransferSaveDto();
      String string0 = accMoneyTransferSaveDto0.toString();
      assertEquals("AccMoneyTransferSaveDto(accountIdFrom=null, accountIdTo=null, amount=null, description=null, transferType=null)", string0);
  }
}
