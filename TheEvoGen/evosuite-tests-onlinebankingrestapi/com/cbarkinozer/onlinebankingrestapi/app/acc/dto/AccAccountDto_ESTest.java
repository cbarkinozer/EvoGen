/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:05:57 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.acc.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import com.cbarkinozer.onlinebankingrestapi.app.acc.dto.AccAccountDto;
import com.cbarkinozer.onlinebankingrestapi.app.acc.enums.AccAccountType;
import com.cbarkinozer.onlinebankingrestapi.app.acc.enums.AccCurrencyType;
import com.cbarkinozer.onlinebankingrestapi.app.gen.enums.GenStatusType;
import java.math.BigDecimal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccAccountDto_ESTest extends AccAccountDto_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      GenStatusType genStatusType0 = GenStatusType.ACTIVE;
      accAccountDto0.setStatusType(genStatusType0);
      GenStatusType genStatusType1 = accAccountDto0.getStatusType();
      assertSame(genStatusType1, genStatusType0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      Long long0 = new Long(0L);
      accAccountDto0.setId(long0);
      Long long1 = accAccountDto0.getId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      Long long0 = new Long(2);
      accAccountDto0.setId(long0);
      Long long1 = accAccountDto0.getId();
      assertEquals(2L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      Long long0 = new Long((-705L));
      accAccountDto0.setId(long0);
      Long long1 = accAccountDto0.getId();
      assertEquals((-705L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      accAccountDto0.setIbanNo("N+As");
      String string0 = accAccountDto0.getIbanNo();
      assertEquals("N+As", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      Long long0 = new Long(0L);
      accAccountDto0.setCustomerId(long0);
      Long long1 = accAccountDto0.getCustomerId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      Long long0 = new Long(1L);
      accAccountDto0.setCustomerId(long0);
      Long long1 = accAccountDto0.getCustomerId();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      Long long0 = new Long((-1L));
      accAccountDto0.setCustomerId(long0);
      Long long1 = accAccountDto0.getCustomerId();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      BigDecimal bigDecimal0 = new BigDecimal((-2318.73861972));
      accAccountDto0.setCurrentBalance(bigDecimal0);
      BigDecimal bigDecimal1 = accAccountDto0.getCurrentBalance();
      assertEquals((short) (-2318), bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      accAccountDto0.setCurrentBalance(bigDecimal0);
      BigDecimal bigDecimal1 = accAccountDto0.getCurrentBalance();
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      BigDecimal bigDecimal0 = new BigDecimal(2);
      accAccountDto0.setCurrentBalance(bigDecimal0);
      BigDecimal bigDecimal1 = accAccountDto0.getCurrentBalance();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      AccCurrencyType accCurrencyType0 = AccCurrencyType.TL;
      accAccountDto0.setCurrencyType(accCurrencyType0);
      AccCurrencyType accCurrencyType1 = accAccountDto0.getCurrencyType();
      assertEquals(AccCurrencyType.TL, accCurrencyType1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      AccAccountType accAccountType0 = AccAccountType.DRAWING;
      accAccountDto0.setAccountType(accAccountType0);
      AccAccountType accAccountType1 = accAccountDto0.getAccountType();
      assertEquals(AccAccountType.DRAWING, accAccountType1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      boolean boolean0 = accAccountDto0.canEqual(accAccountDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      boolean boolean0 = accAccountDto0.canEqual("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      accAccountDto0.getStatusType();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      accAccountDto0.getCurrencyType();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      accAccountDto0.getAccountType();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      Long long0 = accAccountDto0.getCustomerId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      BigDecimal bigDecimal0 = accAccountDto0.getCurrentBalance();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      String string0 = accAccountDto0.getIbanNo();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      Long long0 = accAccountDto0.getId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      GenStatusType genStatusType0 = GenStatusType.ACTIVE;
      accAccountDto0.setStatusType(genStatusType0);
      AccAccountDto accAccountDto1 = new AccAccountDto();
      assertFalse(accAccountDto1.equals((Object)accAccountDto0));
      
      accAccountDto1.setStatusType(genStatusType0);
      boolean boolean0 = accAccountDto1.equals(accAccountDto0);
      assertTrue(accAccountDto1.equals((Object)accAccountDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      GenStatusType genStatusType0 = GenStatusType.ACTIVE;
      accAccountDto0.setStatusType(genStatusType0);
      AccAccountDto accAccountDto1 = new AccAccountDto();
      boolean boolean0 = accAccountDto1.equals(accAccountDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      GenStatusType genStatusType0 = GenStatusType.ACTIVE;
      accAccountDto0.setStatusType(genStatusType0);
      AccAccountDto accAccountDto1 = new AccAccountDto();
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      AccAccountType accAccountType0 = AccAccountType.DRAWING;
      accAccountDto0.setAccountType(accAccountType0);
      AccAccountDto accAccountDto1 = new AccAccountDto();
      assertFalse(accAccountDto1.equals((Object)accAccountDto0));
      
      accAccountDto1.setAccountType(accAccountType0);
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertTrue(accAccountDto1.equals((Object)accAccountDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      AccAccountDto accAccountDto1 = new AccAccountDto();
      assertTrue(accAccountDto1.equals((Object)accAccountDto0));
      
      AccAccountType accAccountType0 = AccAccountType.DRAWING;
      accAccountDto1.setAccountType(accAccountType0);
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      AccAccountType accAccountType0 = AccAccountType.DRAWING;
      accAccountDto0.setAccountType(accAccountType0);
      AccAccountDto accAccountDto1 = new AccAccountDto();
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      AccAccountDto accAccountDto1 = new AccAccountDto();
      AccCurrencyType accCurrencyType0 = AccCurrencyType.EURO;
      accAccountDto0.setCurrencyType(accCurrencyType0);
      assertFalse(accAccountDto0.equals((Object)accAccountDto1));
      
      accAccountDto1.setCurrencyType(accCurrencyType0);
      boolean boolean0 = accAccountDto1.equals(accAccountDto0);
      assertTrue(accAccountDto0.equals((Object)accAccountDto1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      AccAccountDto accAccountDto1 = new AccAccountDto();
      assertTrue(accAccountDto1.equals((Object)accAccountDto0));
      
      AccCurrencyType accCurrencyType0 = AccCurrencyType.USD;
      accAccountDto1.setCurrencyType(accCurrencyType0);
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      accAccountDto0.setCurrentBalance(bigDecimal0);
      AccAccountDto accAccountDto1 = new AccAccountDto();
      assertFalse(accAccountDto1.equals((Object)accAccountDto0));
      
      accAccountDto1.setCurrentBalance(bigDecimal0);
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertTrue(accAccountDto1.equals((Object)accAccountDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      AccAccountDto accAccountDto1 = new AccAccountDto();
      assertTrue(accAccountDto1.equals((Object)accAccountDto0));
      
      BigDecimal bigDecimal0 = new BigDecimal(2591);
      accAccountDto1.setCurrentBalance(bigDecimal0);
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertFalse(accAccountDto1.equals((Object)accAccountDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      accAccountDto0.setCurrentBalance(bigDecimal0);
      AccAccountDto accAccountDto1 = new AccAccountDto();
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      accAccountDto0.setIbanNo("SP");
      AccAccountDto accAccountDto1 = new AccAccountDto();
      assertFalse(accAccountDto1.equals((Object)accAccountDto0));
      
      accAccountDto1.setIbanNo("SP");
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertTrue(accAccountDto1.equals((Object)accAccountDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      AccAccountDto accAccountDto1 = new AccAccountDto();
      assertTrue(accAccountDto1.equals((Object)accAccountDto0));
      
      accAccountDto0.setIbanNo("PASSIVE");
      boolean boolean0 = accAccountDto1.equals(accAccountDto0);
      assertFalse(accAccountDto1.equals((Object)accAccountDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      accAccountDto0.setIbanNo("SP");
      AccAccountDto accAccountDto1 = new AccAccountDto();
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      AccAccountDto accAccountDto1 = new AccAccountDto();
      Long long0 = new Long(0L);
      accAccountDto0.setCustomerId(long0);
      assertFalse(accAccountDto0.equals((Object)accAccountDto1));
      
      accAccountDto1.setCustomerId(long0);
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertTrue(accAccountDto0.equals((Object)accAccountDto1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      AccAccountDto accAccountDto1 = new AccAccountDto();
      assertTrue(accAccountDto1.equals((Object)accAccountDto0));
      
      Long long0 = new Long(1663L);
      accAccountDto1.setCustomerId(long0);
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertFalse(accAccountDto1.equals((Object)accAccountDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      AccAccountDto accAccountDto1 = new AccAccountDto();
      assertTrue(accAccountDto1.equals((Object)accAccountDto0));
      
      Long long0 = new Long(1663L);
      accAccountDto0.setCustomerId(long0);
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertFalse(accAccountDto1.equals((Object)accAccountDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      Long long0 = new Long(2054L);
      accAccountDto0.setId(long0);
      AccAccountDto accAccountDto1 = new AccAccountDto();
      assertFalse(accAccountDto1.equals((Object)accAccountDto0));
      
      accAccountDto1.setId(long0);
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertTrue(accAccountDto1.equals((Object)accAccountDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      AccAccountDto accAccountDto1 = new AccAccountDto();
      assertTrue(accAccountDto1.equals((Object)accAccountDto0));
      
      Long long0 = new Long((-2335L));
      accAccountDto1.setId(long0);
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertFalse(accAccountDto1.equals((Object)accAccountDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      Object object0 = new Object();
      boolean boolean0 = accAccountDto0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      boolean boolean0 = accAccountDto0.equals(accAccountDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      AccCurrencyType accCurrencyType0 = AccCurrencyType.TL;
      accAccountDto0.setCurrencyType(accCurrencyType0);
      accAccountDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      accAccountDto0.setIbanNo("hx3o<)BNsmFa}+7R");
      accAccountDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      Long long0 = new Long((-324L));
      accAccountDto0.setCustomerId(long0);
      accAccountDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      Long long0 = new Long(1339L);
      accAccountDto0.setId(long0);
      accAccountDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      accAccountDto0.setCurrentBalance(bigDecimal0);
      accAccountDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      Long long0 = new Long(2054L);
      accAccountDto0.setId(long0);
      AccAccountDto accAccountDto1 = new AccAccountDto();
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      AccAccountType accAccountType0 = AccAccountType.DRAWING;
      accAccountDto0.setAccountType(accAccountType0);
      accAccountDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      AccCurrencyType accCurrencyType0 = AccCurrencyType.USD;
      accAccountDto0.setCurrencyType(accCurrencyType0);
      AccAccountDto accAccountDto1 = new AccAccountDto();
      boolean boolean0 = accAccountDto0.equals(accAccountDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      accAccountDto0.setIbanNo("");
      String string0 = accAccountDto0.getIbanNo();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      String string0 = accAccountDto0.toString();
      assertEquals("AccAccountDto(id=null, customerId=null, ibanNo=null, currentBalance=null, currencyType=null, accountType=null, statusType=null)", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      AccAccountDto accAccountDto0 = new AccAccountDto();
      GenStatusType genStatusType0 = GenStatusType.ACTIVE;
      accAccountDto0.setStatusType(genStatusType0);
      accAccountDto0.hashCode();
  }
}
