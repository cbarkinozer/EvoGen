/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:07:33 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.acc.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import com.cbarkinozer.onlinebankingrestapi.app.acc.dto.AccMoneyTransferDto;
import com.cbarkinozer.onlinebankingrestapi.app.acc.enums.AccMoneyTransferType;
import java.math.BigDecimal;
import java.time.Clock;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.chrono.IsoChronology;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccMoneyTransferDto_ESTest extends AccMoneyTransferDto_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.DUE;
      accMoneyTransferDto_AccMoneyTransferDtoBuilder0.transferType(accMoneyTransferType0);
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      AccMoneyTransferType accMoneyTransferType1 = accMoneyTransferDto0.getTransferType();
      assertSame(accMoneyTransferType1, accMoneyTransferType0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDate localDate0 = MockLocalDate.now(zoneId0);
      accMoneyTransferDto0.setTransferDate(localDate0);
      LocalDate localDate1 = accMoneyTransferDto0.getTransferDate();
      assertSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Long long0 = new Long((-1136L));
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.DUE;
      AccMoneyTransferDto accMoneyTransferDto0 = new AccMoneyTransferDto(long0, long0, bigDecimal0, (LocalDate) null, "tDWYB~>{", accMoneyTransferType0);
      String string0 = accMoneyTransferDto0.getDescription();
      assertEquals("tDWYB~>{", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.description("");
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder1.build();
      String string0 = accMoneyTransferDto0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Long long0 = new Long(0L);
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.RENTAL;
      AccMoneyTransferDto accMoneyTransferDto0 = new AccMoneyTransferDto(long0, long0, bigDecimal0, localDate0, "com.cbarkinozer.onlinebankingrestapi.app.acc.dto.AccMoneyTransferDto", accMoneyTransferType0);
      BigDecimal bigDecimal1 = accMoneyTransferDto0.getAmount();
      assertSame(bigDecimal0, bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = new Long((-2875L));
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.DUE;
      AccMoneyTransferDto accMoneyTransferDto0 = new AccMoneyTransferDto(long0, long0, bigDecimal0, (LocalDate) null, "tDWYB~>{", accMoneyTransferType0);
      BigDecimal bigDecimal1 = accMoneyTransferDto0.getAmount();
      assertEquals((short)1, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Long long0 = new Long((-1711L));
      BigDecimal bigDecimal0 = new BigDecimal((-1112));
      Period period0 = Period.ofYears(1);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.DUE;
      AccMoneyTransferDto accMoneyTransferDto0 = new AccMoneyTransferDto(long0, long0, bigDecimal0, localDate0, "", accMoneyTransferType0);
      BigDecimal bigDecimal1 = accMoneyTransferDto0.getAmount();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      Long long0 = new Long(0L);
      accMoneyTransferDto_AccMoneyTransferDtoBuilder0.accountIdTo(long0);
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      accMoneyTransferDto0.getAccountIdTo();
      assertEquals("AccMoneyTransferDto(accountIdFrom=null, accountIdTo=0, amount=null, transferDate=null, description=null, transferType=null)", accMoneyTransferDto0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Long long0 = new Long((-2875L));
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.DUE;
      Long long1 = new Long(3810L);
      AccMoneyTransferDto accMoneyTransferDto0 = new AccMoneyTransferDto(long0, long1, bigDecimal0, (LocalDate) null, "P&'#i", accMoneyTransferType0);
      accMoneyTransferDto0.getAccountIdTo();
      assertEquals("AccMoneyTransferDto(accountIdFrom=-2875, accountIdTo=3810, amount=1, transferDate=null, description=P&'#i, transferType=DUE)", accMoneyTransferDto0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      Long long0 = new Long((-1136L));
      accMoneyTransferDto0.setAccountIdTo(long0);
      Long long1 = accMoneyTransferDto0.getAccountIdTo();
      assertEquals((-1136L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      Long long0 = new Long(0L);
      accMoneyTransferDto0.setAccountIdFrom(long0);
      Long long1 = accMoneyTransferDto0.getAccountIdFrom();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.DUE;
      Long long0 = new Long(1);
      AccMoneyTransferDto accMoneyTransferDto0 = new AccMoneyTransferDto(long0, long0, bigDecimal0, (LocalDate) null, "com.cbarkinozer.onlinebankingrestapi.app.acc.dto.AccMoneyTransferDto$AccMoneyTransferDtoBuilder", accMoneyTransferType0);
      Long long1 = accMoneyTransferDto0.getAccountIdFrom();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Long long0 = new Long((-2875L));
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.DUE;
      AccMoneyTransferDto accMoneyTransferDto0 = new AccMoneyTransferDto(long0, long0, bigDecimal0, (LocalDate) null, (String) null, accMoneyTransferType0);
      Long long1 = accMoneyTransferDto0.getAccountIdFrom();
      assertEquals((-2875L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      boolean boolean0 = accMoneyTransferDto0.canEqual(accMoneyTransferDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      Object object0 = new Object();
      boolean boolean0 = accMoneyTransferDto0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      LocalDate localDate0 = accMoneyTransferDto0.getTransferDate();
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      String string0 = accMoneyTransferDto0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      BigDecimal bigDecimal0 = accMoneyTransferDto0.getAmount();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      Long long0 = accMoneyTransferDto0.getAccountIdTo();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      accMoneyTransferDto0.getTransferType();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      Long long0 = accMoneyTransferDto0.getAccountIdFrom();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.DUE;
      accMoneyTransferDto_AccMoneyTransferDtoBuilder0.transferType(accMoneyTransferType0);
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      boolean boolean0 = accMoneyTransferDto1.equals(accMoneyTransferDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      assertTrue(accMoneyTransferDto1.equals((Object)accMoneyTransferDto0));
      
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.RENTAL;
      accMoneyTransferDto1.setTransferType(accMoneyTransferType0);
      boolean boolean0 = accMoneyTransferDto0.equals(accMoneyTransferDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.RENTAL;
      accMoneyTransferDto_AccMoneyTransferDtoBuilder0.transferType(accMoneyTransferType0);
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      boolean boolean0 = accMoneyTransferDto1.equals(accMoneyTransferDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      assertTrue(accMoneyTransferDto1.equals((Object)accMoneyTransferDto0));
      
      accMoneyTransferDto1.setDescription("1< z1`G3");
      boolean boolean0 = accMoneyTransferDto1.equals(accMoneyTransferDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      LocalDate localDate0 = MockLocalDate.now();
      accMoneyTransferDto_AccMoneyTransferDtoBuilder0.transferDate(localDate0);
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      boolean boolean0 = accMoneyTransferDto0.equals(accMoneyTransferDto1);
      assertFalse(boolean0);
      assertFalse(accMoneyTransferDto1.equals((Object)accMoneyTransferDto0));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      assertTrue(accMoneyTransferDto1.equals((Object)accMoneyTransferDto0));
      
      LocalDate localDate0 = MockLocalDate.now();
      accMoneyTransferDto1.setTransferDate(localDate0);
      boolean boolean0 = accMoneyTransferDto1.equals(accMoneyTransferDto0);
      assertFalse(accMoneyTransferDto1.equals((Object)accMoneyTransferDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      accMoneyTransferDto0.setAmount(bigDecimal0);
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      boolean boolean0 = accMoneyTransferDto0.equals(accMoneyTransferDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      accMoneyTransferDto_AccMoneyTransferDtoBuilder0.amount(bigDecimal0);
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      boolean boolean0 = accMoneyTransferDto0.equals(accMoneyTransferDto1);
      assertFalse(boolean0);
      assertFalse(accMoneyTransferDto1.equals((Object)accMoneyTransferDto0));
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      accMoneyTransferDto_AccMoneyTransferDtoBuilder0.amount(bigDecimal0);
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      boolean boolean0 = accMoneyTransferDto0.equals(accMoneyTransferDto1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      Long long0 = new Long(0L);
      accMoneyTransferDto0.setAccountIdTo(long0);
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      boolean boolean0 = accMoneyTransferDto0.equals(accMoneyTransferDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      assertTrue(accMoneyTransferDto1.equals((Object)accMoneyTransferDto0));
      
      Long long0 = new Long(450L);
      accMoneyTransferDto1.setAccountIdTo(long0);
      boolean boolean0 = accMoneyTransferDto0.equals(accMoneyTransferDto1);
      assertFalse(accMoneyTransferDto1.equals((Object)accMoneyTransferDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      assertTrue(accMoneyTransferDto1.equals((Object)accMoneyTransferDto0));
      
      Long long0 = new Long((-377L));
      accMoneyTransferDto1.setAccountIdFrom(long0);
      boolean boolean0 = accMoneyTransferDto1.equals(accMoneyTransferDto0);
      assertFalse(accMoneyTransferDto1.equals((Object)accMoneyTransferDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      boolean boolean0 = accMoneyTransferDto0.equals(accMoneyTransferDto_AccMoneyTransferDtoBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      boolean boolean0 = accMoneyTransferDto0.equals(accMoneyTransferDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Long long0 = new Long((-2875L));
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LocalDate localDate0 = MockLocalDate.ofEpochDay(4094L);
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.DUE;
      AccMoneyTransferDto accMoneyTransferDto0 = new AccMoneyTransferDto((Long) null, long0, bigDecimal0, localDate0, (String) null, accMoneyTransferType0);
      accMoneyTransferDto0.hashCode();
      assertEquals("AccMoneyTransferDto(accountIdFrom=null, accountIdTo=-2875, amount=0, transferDate=1981-03-18, description=null, transferType=DUE)", accMoneyTransferDto0.toString());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      accMoneyTransferDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Long long0 = new Long((-2875L));
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.DUE;
      AccMoneyTransferDto accMoneyTransferDto0 = new AccMoneyTransferDto(long0, long0, bigDecimal0, (LocalDate) null, "P&'#i", accMoneyTransferType0);
      accMoneyTransferDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      String string0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.toString();
      assertEquals("AccMoneyTransferDto.AccMoneyTransferDtoBuilder(accountIdFrom=null, accountIdTo=null, amount=null, transferDate=null, description=null, transferType=null)", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      accMoneyTransferDto_AccMoneyTransferDtoBuilder0.description("Fp7Gf_bZt7je{xY");
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      boolean boolean0 = accMoneyTransferDto0.equals(accMoneyTransferDto1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      Long long0 = new Long(0L);
      accMoneyTransferDto_AccMoneyTransferDtoBuilder0.accountIdFrom(long0);
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      boolean boolean0 = accMoneyTransferDto0.equals(accMoneyTransferDto1);
      assertEquals("AccMoneyTransferDto(accountIdFrom=0, accountIdTo=null, amount=null, transferDate=null, description=null, transferType=null)", accMoneyTransferDto1.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      LocalDate localDate0 = MockLocalDate.now();
      accMoneyTransferDto_AccMoneyTransferDtoBuilder0.transferDate(localDate0);
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      boolean boolean0 = accMoneyTransferDto1.equals(accMoneyTransferDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      Long long0 = new Long(0L);
      accMoneyTransferDto_AccMoneyTransferDtoBuilder0.accountIdTo(long0);
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      boolean boolean0 = accMoneyTransferDto0.equals(accMoneyTransferDto1);
      assertEquals("AccMoneyTransferDto(accountIdFrom=null, accountIdTo=0, amount=null, transferDate=null, description=null, transferType=null)", accMoneyTransferDto1.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = new AccMoneyTransferDto.AccMoneyTransferDtoBuilder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      String string0 = accMoneyTransferDto0.toString();
      assertEquals("AccMoneyTransferDto(accountIdFrom=null, accountIdTo=null, amount=null, transferDate=null, description=null, transferType=null)", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      Long long0 = new Long(0L);
      accMoneyTransferDto0.setAccountIdFrom(long0);
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      boolean boolean0 = accMoneyTransferDto1.equals(accMoneyTransferDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      AccMoneyTransferDto.AccMoneyTransferDtoBuilder accMoneyTransferDto_AccMoneyTransferDtoBuilder0 = AccMoneyTransferDto.builder();
      AccMoneyTransferDto accMoneyTransferDto0 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      accMoneyTransferDto0.setDescription("~:@8*6g9r.vA_3J#P");
      AccMoneyTransferDto accMoneyTransferDto1 = accMoneyTransferDto_AccMoneyTransferDtoBuilder0.build();
      boolean boolean0 = accMoneyTransferDto1.equals(accMoneyTransferDto0);
      assertFalse(boolean0);
  }
}
