/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:07:31 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.acc.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import com.cbarkinozer.onlinebankingrestapi.app.acc.entity.AccAccount;
import com.cbarkinozer.onlinebankingrestapi.app.acc.enums.AccAccountType;
import com.cbarkinozer.onlinebankingrestapi.app.acc.enums.AccCurrencyType;
import com.cbarkinozer.onlinebankingrestapi.app.gen.enums.GenStatusType;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccAccount_ESTest extends AccAccount_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      Long long0 = new Long(0L);
      accAccount0.setId(long0);
      Long long1 = accAccount0.getId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      Long long0 = new Long((-3642L));
      accAccount0.setId(long0);
      Long long1 = accAccount0.getId();
      assertEquals((-3642L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      accAccount0.setIbanNo("t^|4mw-L");
      String string0 = accAccount0.getIbanNo();
      assertEquals("t^|4mw-L", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      accAccount0.setIbanNo("");
      String string0 = accAccount0.getIbanNo();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      Long long0 = new Long(0L);
      accAccount0.setCustomerId(long0);
      Long long1 = accAccount0.getCustomerId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      Long long0 = new Long(2024L);
      accAccount0.setCustomerId(long0);
      Long long1 = accAccount0.getCustomerId();
      assertEquals(2024L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      Long long0 = new Long((-3983L));
      accAccount0.setCustomerId(long0);
      Long long1 = accAccount0.getCustomerId();
      assertEquals((-3983L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      BigDecimal bigDecimal0 = BigDecimal.valueOf(2208L, 1584);
      accAccount0.setCurrentBalance(bigDecimal0);
      BigDecimal bigDecimal1 = accAccount0.getCurrentBalance();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      BigInteger bigInteger0 = BigInteger.TEN;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      accAccount0.setCurrentBalance(bigDecimal0);
      BigDecimal bigDecimal1 = accAccount0.getCurrentBalance();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      AccCurrencyType accCurrencyType0 = AccCurrencyType.EURO;
      accAccount0.setCurrencyType(accCurrencyType0);
      AccCurrencyType accCurrencyType1 = accAccount0.getCurrencyType();
      assertSame(accCurrencyType1, accCurrencyType0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      accAccount0.setCancelDate(localDate0);
      LocalDate localDate1 = accAccount0.getCancelDate();
      assertSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      Long long0 = accAccount0.getCustomerId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      AccAccountType accAccountType0 = AccAccountType.DEPOSIT;
      accAccount0.setAccountType(accAccountType0);
      AccAccountType accAccountType1 = accAccount0.getAccountType();
      assertEquals(AccAccountType.DEPOSIT, accAccountType1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      LocalDate localDate0 = accAccount0.getCancelDate();
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      accAccount0.getCurrencyType();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      BigDecimal bigDecimal0 = new BigDecimal((-3344L));
      accAccount0.setCurrentBalance(bigDecimal0);
      BigDecimal bigDecimal1 = accAccount0.getCurrentBalance();
      assertEquals((byte) (-16), bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      String string0 = accAccount0.getIbanNo();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      GenStatusType genStatusType0 = GenStatusType.PASSIVE;
      accAccount0.setStatusType(genStatusType0);
      GenStatusType genStatusType1 = accAccount0.getStatusType();
      assertEquals(GenStatusType.PASSIVE, genStatusType1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      accAccount0.getAccountType();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      accAccount0.getStatusType();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      Long long0 = accAccount0.getId();
      accAccount0.setCustomerId(long0);
      assertNull(accAccount0.getAccountType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      BigDecimal bigDecimal0 = accAccount0.getCurrentBalance();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AccAccount accAccount0 = new AccAccount();
      Long long0 = new Long(916L);
      accAccount0.setId(long0);
      Long long1 = accAccount0.getId();
      assertEquals(916L, (long)long1);
  }
}
