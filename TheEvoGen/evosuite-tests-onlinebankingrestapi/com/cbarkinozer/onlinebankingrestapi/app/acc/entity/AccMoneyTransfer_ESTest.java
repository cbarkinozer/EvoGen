/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:07:47 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.acc.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import com.cbarkinozer.onlinebankingrestapi.app.acc.entity.AccMoneyTransfer;
import com.cbarkinozer.onlinebankingrestapi.app.acc.enums.AccMoneyTransferType;
import java.math.BigDecimal;
import java.time.LocalDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccMoneyTransfer_ESTest extends AccMoneyTransfer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      AccMoneyTransferType accMoneyTransferType0 = AccMoneyTransferType.DUE;
      accMoneyTransfer0.setTransferType(accMoneyTransferType0);
      AccMoneyTransferType accMoneyTransferType1 = accMoneyTransfer0.getTransferType();
      assertSame(accMoneyTransferType1, accMoneyTransferType0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(144L);
      accMoneyTransfer0.setTransferDate(localDate0);
      LocalDate localDate1 = accMoneyTransfer0.getTransferDate();
      assertSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      Long long0 = new Long(0L);
      accMoneyTransfer0.setId(long0);
      Long long1 = accMoneyTransfer0.getId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      Long long0 = new Long(1L);
      accMoneyTransfer0.setId(long0);
      Long long1 = accMoneyTransfer0.getId();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      Long long0 = new Long((-24L));
      accMoneyTransfer0.setId(long0);
      Long long1 = accMoneyTransfer0.getId();
      assertEquals((-24L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      accMoneyTransfer0.setDescription("T");
      String string0 = accMoneyTransfer0.getDescription();
      assertEquals("T", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      accMoneyTransfer0.setDescription("");
      String string0 = accMoneyTransfer0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      accMoneyTransfer0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = accMoneyTransfer0.getAmount();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      accMoneyTransfer0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = accMoneyTransfer0.getAmount();
      assertEquals((byte)1, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      Long long0 = new Long(0);
      accMoneyTransfer0.setAccountIdTo(long0);
      Long long1 = accMoneyTransfer0.getAccountIdTo();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      Long long0 = new Long((-3683L));
      accMoneyTransfer0.setAccountIdTo(long0);
      Long long1 = accMoneyTransfer0.getAccountIdTo();
      assertEquals((-3683L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      Long long0 = new Long(0L);
      accMoneyTransfer0.setAccountIdFrom(long0);
      Long long1 = accMoneyTransfer0.getAccountIdFrom();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      Long long0 = new Long(2108L);
      accMoneyTransfer0.setAccountIdFrom(long0);
      Long long1 = accMoneyTransfer0.getAccountIdFrom();
      assertEquals(2108L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      Long long0 = new Long((-228L));
      accMoneyTransfer0.setAccountIdFrom(long0);
      Long long1 = accMoneyTransfer0.getAccountIdFrom();
      assertEquals((-228L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      Long long0 = accMoneyTransfer0.getId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      Long long0 = new Long(973L);
      accMoneyTransfer0.setAccountIdTo(long0);
      Long long1 = accMoneyTransfer0.getAccountIdTo();
      assertEquals(973L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      accMoneyTransfer0.getTransferType();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      Long long0 = accMoneyTransfer0.getAccountIdTo();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      String string0 = accMoneyTransfer0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      BigDecimal bigDecimal0 = new BigDecimal((-883.22966412));
      accMoneyTransfer0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = accMoneyTransfer0.getAmount();
      assertEquals((short) (-883), bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      BigDecimal bigDecimal0 = accMoneyTransfer0.getAmount();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      Long long0 = accMoneyTransfer0.getAccountIdFrom();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AccMoneyTransfer accMoneyTransfer0 = new AccMoneyTransfer();
      LocalDate localDate0 = accMoneyTransfer0.getTransferDate();
      assertNull(localDate0);
  }
}
