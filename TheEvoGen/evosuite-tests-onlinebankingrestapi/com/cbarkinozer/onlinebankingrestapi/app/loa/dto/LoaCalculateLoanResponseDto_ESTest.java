/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:20:41 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.loa.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import com.cbarkinozer.onlinebankingrestapi.app.loa.dto.LoaCalculateLoanResponseDto;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.MathContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LoaCalculateLoanResponseDto_ESTest extends LoaCalculateLoanResponseDto_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      BigDecimal bigDecimal1 = bigDecimal0.movePointLeft(1528);
      loaCalculateLoanResponseDto0.setTotalPayment(bigDecimal1);
      BigDecimal bigDecimal2 = loaCalculateLoanResponseDto0.getTotalPayment();
      assertSame(bigDecimal2, bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      loaCalculateLoanResponseDto0.setTotalPayment(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getTotalPayment();
      assertEquals((byte)1, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      loaCalculateLoanResponseDto0.setTotalPayment(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getTotalPayment();
      assertEquals((short) (-1), bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      loaCalculateLoanResponseDto0.setTotalInterest(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getTotalInterest();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = new BigDecimal(3430L);
      loaCalculateLoanResponseDto0.setTotalInterest(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getTotalInterest();
      assertEquals((byte)102, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      loaCalculateLoanResponseDto0.setTotalInterest(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getTotalInterest();
      assertEquals((byte) (-1), bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      byte[] byteArray0 = new byte[2];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      loaCalculateLoanResponseDto0.setMonthlyInstallmentAmount(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getMonthlyInstallmentAmount();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaCalculateLoanResponseDto0.setMonthlyInstallmentAmount(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getMonthlyInstallmentAmount();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = new BigDecimal((-3453L));
      loaCalculateLoanResponseDto0.setMonthlyInstallmentAmount(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getMonthlyInstallmentAmount();
      assertEquals((short) (-3453), bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      BigDecimal bigDecimal1 = new BigDecimal(1528);
      MathContext mathContext0 = MathContext.DECIMAL64;
      BigDecimal bigDecimal2 = bigDecimal0.subtract(bigDecimal1, mathContext0);
      loaCalculateLoanResponseDto0.setInterestRate(bigDecimal2);
      BigDecimal bigDecimal3 = loaCalculateLoanResponseDto0.getInterestRate();
      assertSame(bigDecimal3, bigDecimal2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      byte[] byteArray0 = new byte[2];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      loaCalculateLoanResponseDto0.setInterestRate(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getInterestRate();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = new BigDecimal((int) (byte)97);
      loaCalculateLoanResponseDto0.setInterestRate(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getInterestRate();
      assertEquals((short)97, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      loaCalculateLoanResponseDto0.setInterestRate(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getInterestRate();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      byte[] byteArray0 = new byte[2];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      loaCalculateLoanResponseDto0.setAnnualCostRate(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getAnnualCostRate();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = new BigDecimal(1335.688713884);
      loaCalculateLoanResponseDto0.setAnnualCostRate(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getAnnualCostRate();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = new BigDecimal((-1320L));
      loaCalculateLoanResponseDto0.setAnnualCostRate(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getAnnualCostRate();
      assertEquals((byte) (-40), bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      loaCalculateLoanResponseDto0.setAllocationFee(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getAllocationFee();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = new BigDecimal(1L);
      loaCalculateLoanResponseDto0.setAllocationFee(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getAllocationFee();
      assertEquals((short)1, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = new BigDecimal((-1320L));
      loaCalculateLoanResponseDto0.setAllocationFee(bigDecimal0);
      BigDecimal bigDecimal1 = loaCalculateLoanResponseDto0.getAllocationFee();
      assertEquals((byte) (-40), bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      boolean boolean0 = loaCalculateLoanResponseDto0.canEqual(loaCalculateLoanResponseDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      Object object0 = new Object();
      boolean boolean0 = loaCalculateLoanResponseDto0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = loaCalculateLoanResponseDto0.getMonthlyInstallmentAmount();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = loaCalculateLoanResponseDto0.getInterestRate();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = loaCalculateLoanResponseDto0.getAnnualCostRate();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = loaCalculateLoanResponseDto0.getAllocationFee();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = loaCalculateLoanResponseDto0.getTotalInterest();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = loaCalculateLoanResponseDto0.getTotalPayment();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      loaCalculateLoanResponseDto0.setAllocationFee(bigDecimal0);
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      assertFalse(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      
      loaCalculateLoanResponseDto1.setAllocationFee(bigDecimal0);
      boolean boolean0 = loaCalculateLoanResponseDto0.equals(loaCalculateLoanResponseDto1);
      assertTrue(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      assertTrue(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      loaCalculateLoanResponseDto1.setAllocationFee(bigDecimal0);
      boolean boolean0 = loaCalculateLoanResponseDto0.equals(loaCalculateLoanResponseDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      loaCalculateLoanResponseDto0.setAnnualCostRate(bigDecimal0);
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      assertFalse(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      
      loaCalculateLoanResponseDto1.setAnnualCostRate(bigDecimal0);
      boolean boolean0 = loaCalculateLoanResponseDto0.equals(loaCalculateLoanResponseDto1);
      assertTrue(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      assertTrue(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      loaCalculateLoanResponseDto1.setAnnualCostRate(bigDecimal0);
      boolean boolean0 = loaCalculateLoanResponseDto0.equals(loaCalculateLoanResponseDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaCalculateLoanResponseDto0.setTotalPayment(bigDecimal0);
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      assertFalse(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      
      loaCalculateLoanResponseDto1.setTotalPayment(bigDecimal0);
      boolean boolean0 = loaCalculateLoanResponseDto1.equals(loaCalculateLoanResponseDto0);
      assertTrue(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      assertTrue(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      loaCalculateLoanResponseDto1.setTotalPayment(bigDecimal0);
      boolean boolean0 = loaCalculateLoanResponseDto1.equals(loaCalculateLoanResponseDto0);
      assertFalse(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      loaCalculateLoanResponseDto0.setMonthlyInstallmentAmount(bigDecimal0);
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      assertFalse(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      
      loaCalculateLoanResponseDto1.setMonthlyInstallmentAmount(bigDecimal0);
      boolean boolean0 = loaCalculateLoanResponseDto0.equals(loaCalculateLoanResponseDto1);
      assertTrue(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      assertTrue(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaCalculateLoanResponseDto1.setMonthlyInstallmentAmount(bigDecimal0);
      boolean boolean0 = loaCalculateLoanResponseDto1.equals(loaCalculateLoanResponseDto0);
      assertFalse(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      loaCalculateLoanResponseDto0.setTotalInterest(bigDecimal0);
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      assertFalse(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      
      loaCalculateLoanResponseDto1.setTotalInterest(bigDecimal0);
      boolean boolean0 = loaCalculateLoanResponseDto0.equals(loaCalculateLoanResponseDto1);
      assertTrue(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      assertTrue(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      loaCalculateLoanResponseDto1.setTotalInterest(bigDecimal0);
      boolean boolean0 = loaCalculateLoanResponseDto0.equals(loaCalculateLoanResponseDto1);
      assertFalse(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      byte[] byteArray0 = new byte[2];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      loaCalculateLoanResponseDto0.setInterestRate(bigDecimal0);
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      assertFalse(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      
      loaCalculateLoanResponseDto1.setInterestRate(bigDecimal0);
      boolean boolean0 = loaCalculateLoanResponseDto0.equals(loaCalculateLoanResponseDto1);
      assertTrue(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      assertTrue(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      loaCalculateLoanResponseDto1.setInterestRate(bigDecimal0);
      boolean boolean0 = loaCalculateLoanResponseDto0.equals(loaCalculateLoanResponseDto1);
      assertFalse(loaCalculateLoanResponseDto1.equals((Object)loaCalculateLoanResponseDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      byte[] byteArray0 = new byte[2];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      loaCalculateLoanResponseDto0.setInterestRate(bigDecimal0);
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      boolean boolean0 = loaCalculateLoanResponseDto0.equals(loaCalculateLoanResponseDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      byte[] byteArray0 = new byte[2];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      boolean boolean0 = loaCalculateLoanResponseDto0.equals(bigInteger0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      boolean boolean0 = loaCalculateLoanResponseDto0.equals(loaCalculateLoanResponseDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      loaCalculateLoanResponseDto0.setAllocationFee(bigDecimal0);
      loaCalculateLoanResponseDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      loaCalculateLoanResponseDto0.setAnnualCostRate(bigDecimal0);
      loaCalculateLoanResponseDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = new BigDecimal((int) (byte)97);
      loaCalculateLoanResponseDto0.setTotalPayment(bigDecimal0);
      loaCalculateLoanResponseDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      loaCalculateLoanResponseDto0.setMonthlyInstallmentAmount(bigDecimal0);
      loaCalculateLoanResponseDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      loaCalculateLoanResponseDto0.setTotalInterest(bigDecimal0);
      loaCalculateLoanResponseDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      loaCalculateLoanResponseDto0.setInterestRate(bigDecimal0);
      loaCalculateLoanResponseDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      loaCalculateLoanResponseDto0.setMonthlyInstallmentAmount(bigDecimal0);
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      boolean boolean0 = loaCalculateLoanResponseDto1.equals(loaCalculateLoanResponseDto0);
      assertFalse(boolean0);
      assertFalse(loaCalculateLoanResponseDto0.equals((Object)loaCalculateLoanResponseDto1));
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      String string0 = loaCalculateLoanResponseDto0.toString();
      assertEquals("LoaCalculateLoanResponseDto(interestRate=null, totalInterest=null, monthlyInstallmentAmount=null, totalPayment=null, annualCostRate=null, allocationFee=null)", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      loaCalculateLoanResponseDto0.setAnnualCostRate(bigDecimal0);
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      boolean boolean0 = loaCalculateLoanResponseDto0.equals(loaCalculateLoanResponseDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      loaCalculateLoanResponseDto0.setTotalPayment(bigDecimal0);
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      boolean boolean0 = loaCalculateLoanResponseDto1.equals(loaCalculateLoanResponseDto0);
      assertFalse(boolean0);
      assertFalse(loaCalculateLoanResponseDto0.equals((Object)loaCalculateLoanResponseDto1));
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      loaCalculateLoanResponseDto0.setAllocationFee(bigDecimal0);
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      boolean boolean0 = loaCalculateLoanResponseDto0.equals(loaCalculateLoanResponseDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto0 = new LoaCalculateLoanResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      loaCalculateLoanResponseDto0.setTotalInterest(bigDecimal0);
      LoaCalculateLoanResponseDto loaCalculateLoanResponseDto1 = new LoaCalculateLoanResponseDto();
      boolean boolean0 = loaCalculateLoanResponseDto0.equals(loaCalculateLoanResponseDto1);
      assertFalse(boolean0);
  }
}
