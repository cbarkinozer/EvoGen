/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:21:22 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.loa.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import com.cbarkinozer.onlinebankingrestapi.app.loa.dto.LoaLoanDto;
import com.cbarkinozer.onlinebankingrestapi.app.loa.enums.LoaLoanStatusType;
import java.math.BigDecimal;
import java.time.LocalDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LoaLoanDto_ESTest extends LoaLoanDto_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      loaLoanDto0.setRemainingPrincipal(bigDecimal0);
      BigDecimal bigDecimal1 = loaLoanDto0.getRemainingPrincipal();
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setRemainingPrincipal(bigDecimal0);
      BigDecimal bigDecimal1 = loaLoanDto0.getRemainingPrincipal();
      assertEquals((short)10, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-637L));
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      loaLoanDto0.setRemainingPrincipal(bigDecimal0);
      BigDecimal bigDecimal1 = loaLoanDto0.getRemainingPrincipal();
      assertEquals((byte) (-125), bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      loaLoanDto0.setPrincipalToBePaid(bigDecimal0);
      BigDecimal bigDecimal1 = loaLoanDto0.getPrincipalToBePaid();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setPrincipalToBePaid(bigDecimal0);
      BigDecimal bigDecimal1 = loaLoanDto0.getPrincipalToBePaid();
      assertEquals((short)10, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = new BigDecimal((double) (-793L));
      loaLoanDto0.setPrincipalToBePaid(bigDecimal0);
      BigDecimal bigDecimal1 = loaLoanDto0.getPrincipalToBePaid();
      assertEquals((short) (-793), bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = new BigDecimal((-47L));
      loaLoanDto0.setPrincipalLoanAmount(bigDecimal0);
      BigDecimal bigDecimal1 = loaLoanDto0.getPrincipalLoanAmount();
      assertEquals((byte) (-47), bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      loaLoanDto0.setPrincipalLoanAmount(bigDecimal0);
      BigDecimal bigDecimal1 = loaLoanDto0.getPrincipalLoanAmount();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setPrincipalLoanAmount(bigDecimal0);
      BigDecimal bigDecimal1 = loaLoanDto0.getPrincipalLoanAmount();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = new BigDecimal((-1695L));
      loaLoanDto0.setMonthlyInstallmentAmount(bigDecimal0);
      BigDecimal bigDecimal1 = loaLoanDto0.getMonthlyInstallmentAmount();
      assertEquals((byte)97, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      loaLoanDto0.setMonthlyInstallmentAmount(bigDecimal0);
      BigDecimal bigDecimal1 = loaLoanDto0.getMonthlyInstallmentAmount();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setMonthlyInstallmentAmount(bigDecimal0);
      BigDecimal bigDecimal1 = loaLoanDto0.getMonthlyInstallmentAmount();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = new BigDecimal((-149));
      BigDecimal bigDecimal1 = bigDecimal0.negate();
      loaLoanDto0.setMonthlyInstallmentAmount(bigDecimal1);
      BigDecimal bigDecimal2 = loaLoanDto0.getMonthlyInstallmentAmount();
      assertEquals((short)149, bigDecimal2.shortValue());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LoaLoanStatusType loaLoanStatusType0 = LoaLoanStatusType.PAID;
      loaLoanDto0.setLoanStatusType(loaLoanStatusType0);
      LoaLoanStatusType loaLoanStatusType1 = loaLoanDto0.getLoanStatusType();
      assertEquals(LoaLoanStatusType.PAID, loaLoanStatusType1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      loaLoanDto0.setInterestToBePaid(bigDecimal0);
      BigDecimal bigDecimal1 = loaLoanDto0.getInterestToBePaid();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setInterestToBePaid(bigDecimal0);
      BigDecimal bigDecimal1 = loaLoanDto0.getInterestToBePaid();
      assertEquals((short)10, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.valueOf((-1.0));
      loaLoanDto0.setInterestToBePaid(bigDecimal0);
      BigDecimal bigDecimal1 = loaLoanDto0.getInterestToBePaid();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Integer integer0 = new Integer(0);
      loaLoanDto0.setInstallmentCount(integer0);
      Integer integer1 = loaLoanDto0.getInstallmentCount();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Integer integer0 = new Integer((short)10);
      loaLoanDto0.setInstallmentCount(integer0);
      Integer integer1 = loaLoanDto0.getInstallmentCount();
      assertEquals(10, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Integer integer0 = new Integer((-1787));
      loaLoanDto0.setInstallmentCount(integer0);
      Integer integer1 = loaLoanDto0.getInstallmentCount();
      assertEquals((-1787), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Long long0 = new Long((short)0);
      loaLoanDto0.setId(long0);
      Long long1 = loaLoanDto0.getId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Long long0 = new Long(1);
      loaLoanDto0.setId(long0);
      Long long1 = loaLoanDto0.getId();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Long long0 = new Long((-977L));
      loaLoanDto0.setId(long0);
      Long long1 = loaLoanDto0.getId();
      assertEquals((-977L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LocalDate localDate0 = MockLocalDate.now();
      loaLoanDto0.setDueDate(localDate0);
      LocalDate localDate1 = loaLoanDto0.getDueDate();
      assertSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Long long0 = new Long(0L);
      loaLoanDto0.setCustomerId(long0);
      Long long1 = loaLoanDto0.getCustomerId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Long long0 = new Long(1L);
      loaLoanDto0.setCustomerId(long0);
      Long long1 = loaLoanDto0.getCustomerId();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Long long0 = new Long((-218L));
      loaLoanDto0.setCustomerId(long0);
      Long long1 = loaLoanDto0.getCustomerId();
      assertEquals((-218L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      boolean boolean0 = loaLoanDto0.canEqual(loaLoanDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      boolean boolean0 = loaLoanDto0.canEqual((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = loaLoanDto0.getInterestToBePaid();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Long long0 = loaLoanDto0.getId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      loaLoanDto0.getLoanStatusType();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = loaLoanDto0.getMonthlyInstallmentAmount();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = loaLoanDto0.getPrincipalLoanAmount();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Long long0 = loaLoanDto0.getCustomerId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = loaLoanDto0.getPrincipalToBePaid();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = loaLoanDto0.getRemainingPrincipal();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Integer integer0 = loaLoanDto0.getInstallmentCount();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LocalDate localDate0 = loaLoanDto0.getDueDate();
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LoaLoanStatusType loaLoanStatusType0 = LoaLoanStatusType.PAID;
      loaLoanDto0.setLoanStatusType(loaLoanStatusType0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      assertFalse(loaLoanDto1.equals((Object)loaLoanDto0));
      
      loaLoanDto1.setLoanStatusType(loaLoanStatusType0);
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LoaLoanStatusType loaLoanStatusType0 = LoaLoanStatusType.PAID;
      loaLoanDto0.setLoanStatusType(loaLoanStatusType0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LocalDate localDate0 = MockLocalDate.now();
      loaLoanDto0.setDueDate(localDate0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      assertFalse(loaLoanDto1.equals((Object)loaLoanDto0));
      
      loaLoanDto1.setDueDate(localDate0);
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      
      LocalDate localDate0 = MockLocalDate.now();
      loaLoanDto1.setDueDate(localDate0);
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      
      LocalDate localDate0 = MockLocalDate.now();
      loaLoanDto1.setDueDate(localDate0);
      boolean boolean0 = loaLoanDto1.equals(loaLoanDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setRemainingPrincipal(bigDecimal0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      assertFalse(loaLoanDto1.equals((Object)loaLoanDto0));
      
      loaLoanDto1.setRemainingPrincipal(bigDecimal0);
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      loaLoanDto1.setRemainingPrincipal(bigDecimal0);
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setRemainingPrincipal(bigDecimal0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = new BigDecimal(1L);
      loaLoanDto0.setPrincipalToBePaid(bigDecimal0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      assertFalse(loaLoanDto1.equals((Object)loaLoanDto0));
      
      loaLoanDto1.setPrincipalToBePaid(bigDecimal0);
      boolean boolean0 = loaLoanDto1.equals(loaLoanDto0);
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setPrincipalToBePaid(bigDecimal0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      boolean boolean0 = loaLoanDto1.equals(loaLoanDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = new BigDecimal(1L);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      
      loaLoanDto1.setPrincipalToBePaid(bigDecimal0);
      boolean boolean0 = loaLoanDto1.equals(loaLoanDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setInterestToBePaid(bigDecimal0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      assertFalse(loaLoanDto1.equals((Object)loaLoanDto0));
      
      loaLoanDto1.setInterestToBePaid(bigDecimal0);
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setMonthlyInstallmentAmount(bigDecimal0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      loaLoanDto1.setMonthlyInstallmentAmount(bigDecimal0);
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      
      loaLoanDto1.setInterestToBePaid(bigDecimal0);
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setMonthlyInstallmentAmount(bigDecimal0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      boolean boolean0 = loaLoanDto1.equals(loaLoanDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setMonthlyInstallmentAmount(bigDecimal0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setPrincipalLoanAmount(bigDecimal0);
      assertFalse(loaLoanDto0.equals((Object)loaLoanDto1));
      
      loaLoanDto1.setPrincipalLoanAmount(bigDecimal0);
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      loaLoanDto1.setPrincipalLoanAmount(bigDecimal0);
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertFalse(loaLoanDto1.equals((Object)loaLoanDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setPrincipalLoanAmount(bigDecimal0);
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Integer integer0 = new Integer(0);
      loaLoanDto0.setInstallmentCount(integer0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      assertFalse(loaLoanDto1.equals((Object)loaLoanDto0));
      
      loaLoanDto1.setInstallmentCount(integer0);
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      
      Integer integer0 = new Integer(0);
      loaLoanDto1.setInstallmentCount(integer0);
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertFalse(loaLoanDto1.equals((Object)loaLoanDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      
      Integer integer0 = new Integer(0);
      loaLoanDto0.setInstallmentCount(integer0);
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      Long long0 = new Long(0L);
      loaLoanDto0.setCustomerId(long0);
      assertFalse(loaLoanDto0.equals((Object)loaLoanDto1));
      
      loaLoanDto1.setCustomerId(long0);
      boolean boolean0 = loaLoanDto1.equals(loaLoanDto0);
      assertTrue(loaLoanDto0.equals((Object)loaLoanDto1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      
      Long long0 = new Long(0L);
      loaLoanDto1.setCustomerId(long0);
      boolean boolean0 = loaLoanDto1.equals(loaLoanDto0);
      assertFalse(loaLoanDto1.equals((Object)loaLoanDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Long long0 = new Long(1L);
      loaLoanDto0.setId(long0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      assertFalse(loaLoanDto1.equals((Object)loaLoanDto0));
      
      loaLoanDto1.setId(long0);
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertTrue(loaLoanDto1.equals((Object)loaLoanDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Long long0 = new Long(0L);
      loaLoanDto0.setId(long0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      boolean boolean0 = loaLoanDto1.equals(loaLoanDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      boolean boolean0 = loaLoanDto0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LoaLoanStatusType loaLoanStatusType0 = LoaLoanStatusType.LATE;
      loaLoanDto0.setLoanStatusType(loaLoanStatusType0);
      loaLoanDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      loaLoanDto0.setInterestToBePaid(bigDecimal0);
      loaLoanDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setPrincipalLoanAmount(bigDecimal0);
      loaLoanDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Long long0 = new Long(421L);
      loaLoanDto0.setCustomerId(long0);
      loaLoanDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Long long0 = new Long(2377L);
      loaLoanDto0.setId(long0);
      loaLoanDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Long long0 = new Long(0L);
      loaLoanDto0.setCustomerId(long0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      boolean boolean0 = loaLoanDto1.equals(loaLoanDto0);
      assertFalse(boolean0);
      assertFalse(loaLoanDto0.equals((Object)loaLoanDto1));
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Long long0 = new Long(1L);
      loaLoanDto0.setId(long0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      String string0 = loaLoanDto0.toString();
      assertEquals("LoaLoanDto(id=null, customerId=null, installmentCount=null, principalLoanAmount=null, monthlyInstallmentAmount=null, interestToBePaid=null, principalToBePaid=null, remainingPrincipal=null, dueDate=null, loanStatusType=null)", string0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setInterestToBePaid(bigDecimal0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      boolean boolean0 = loaLoanDto0.equals(loaLoanDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setPrincipalToBePaid(bigDecimal0);
      loaLoanDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setRemainingPrincipal(bigDecimal0);
      loaLoanDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      Integer integer0 = new Integer(0);
      loaLoanDto0.setInstallmentCount(integer0);
      loaLoanDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaLoanDto0.setMonthlyInstallmentAmount(bigDecimal0);
      loaLoanDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LoaLoanStatusType loaLoanStatusType0 = LoaLoanStatusType.CONTINUING;
      loaLoanDto0.setLoanStatusType(loaLoanStatusType0);
      LoaLoanDto loaLoanDto1 = new LoaLoanDto();
      boolean boolean0 = loaLoanDto1.equals(loaLoanDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      LoaLoanDto loaLoanDto0 = new LoaLoanDto();
      LocalDate localDate0 = MockLocalDate.now();
      loaLoanDto0.setDueDate(localDate0);
      loaLoanDto0.hashCode();
  }
}
