/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:21:24 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.loa.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import com.cbarkinozer.onlinebankingrestapi.app.loa.dto.LoaPayInstallmentResponseDto;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.MathContext;
import java.time.Clock;
import java.time.LocalDate;
import java.time.Month;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LoaPayInstallmentResponseDto_ESTest extends LoaPayInstallmentResponseDto_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      BigDecimal bigDecimal0 = new BigDecimal((double) (-574));
      loaPayInstallmentResponseDto0.setRemainingPrincipal(bigDecimal0);
      BigDecimal bigDecimal1 = loaPayInstallmentResponseDto0.getRemainingPrincipal();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      MathContext mathContext0 = MathContext.DECIMAL128;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, 59, mathContext0);
      loaPayInstallmentResponseDto0.setRemainingPrincipal(bigDecimal0);
      BigDecimal bigDecimal1 = loaPayInstallmentResponseDto0.getRemainingPrincipal();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaPayInstallmentResponseDto0.setRemainingPrincipal(bigDecimal0);
      BigDecimal bigDecimal1 = loaPayInstallmentResponseDto0.getRemainingPrincipal();
      assertEquals((short)10, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      LocalDate localDate0 = MockLocalDate.ofYearDay(59, 59);
      loaPayInstallmentResponseDto0.setPaymentDate(localDate0);
      LocalDate localDate1 = loaPayInstallmentResponseDto0.getPaymentDate();
      assertSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      BigDecimal bigDecimal0 = new BigDecimal((-3986));
      loaPayInstallmentResponseDto0.setPaymentAmount(bigDecimal0);
      BigDecimal bigDecimal1 = loaPayInstallmentResponseDto0.getPaymentAmount();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      loaPayInstallmentResponseDto0.setPaymentAmount(bigDecimal0);
      BigDecimal bigDecimal1 = loaPayInstallmentResponseDto0.getPaymentAmount();
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaPayInstallmentResponseDto0.setPaymentAmount(bigDecimal0);
      BigDecimal bigDecimal1 = loaPayInstallmentResponseDto0.getPaymentAmount();
      assertEquals((short)10, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      BigDecimal bigDecimal0 = new BigDecimal(1780.91037);
      loaPayInstallmentResponseDto0.setPaymentAmount(bigDecimal0);
      BigDecimal bigDecimal1 = loaPayInstallmentResponseDto0.getPaymentAmount();
      assertEquals((byte) (-12), bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      Long long0 = new Long(0L);
      loaPayInstallmentResponseDto0.setLoanId(long0);
      Long long1 = loaPayInstallmentResponseDto0.getLoanId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      Long long0 = new Long(1);
      loaPayInstallmentResponseDto0.setLoanId(long0);
      Long long1 = loaPayInstallmentResponseDto0.getLoanId();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      Long long0 = new Long((-1L));
      loaPayInstallmentResponseDto0.setLoanId(long0);
      Long long1 = loaPayInstallmentResponseDto0.getLoanId();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      LocalDate localDate0 = MockLocalDate.now();
      loaPayInstallmentResponseDto0.setDueDate(localDate0);
      LocalDate localDate1 = loaPayInstallmentResponseDto0.getDueDate();
      assertSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      boolean boolean0 = loaPayInstallmentResponseDto0.canEqual(loaPayInstallmentResponseDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      Object object0 = new Object();
      boolean boolean0 = loaPayInstallmentResponseDto0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      Long long0 = loaPayInstallmentResponseDto0.getLoanId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      BigDecimal bigDecimal0 = loaPayInstallmentResponseDto0.getRemainingPrincipal();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      BigDecimal bigDecimal0 = loaPayInstallmentResponseDto0.getPaymentAmount();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      LocalDate localDate0 = loaPayInstallmentResponseDto0.getDueDate();
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      LocalDate localDate0 = loaPayInstallmentResponseDto0.getPaymentDate();
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto1 = new LoaPayInstallmentResponseDto();
      LocalDate localDate0 = MockLocalDate.now();
      loaPayInstallmentResponseDto0.setDueDate(localDate0);
      assertFalse(loaPayInstallmentResponseDto0.equals((Object)loaPayInstallmentResponseDto1));
      
      loaPayInstallmentResponseDto1.setDueDate(localDate0);
      boolean boolean0 = loaPayInstallmentResponseDto0.equals(loaPayInstallmentResponseDto1);
      assertTrue(loaPayInstallmentResponseDto0.equals((Object)loaPayInstallmentResponseDto1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto1 = new LoaPayInstallmentResponseDto();
      assertTrue(loaPayInstallmentResponseDto1.equals((Object)loaPayInstallmentResponseDto0));
      
      LocalDate localDate0 = MockLocalDate.now();
      loaPayInstallmentResponseDto1.setDueDate(localDate0);
      boolean boolean0 = loaPayInstallmentResponseDto0.equals(loaPayInstallmentResponseDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto1 = new LoaPayInstallmentResponseDto();
      assertTrue(loaPayInstallmentResponseDto1.equals((Object)loaPayInstallmentResponseDto0));
      
      LocalDate localDate0 = MockLocalDate.now();
      loaPayInstallmentResponseDto0.setDueDate(localDate0);
      boolean boolean0 = loaPayInstallmentResponseDto0.equals(loaPayInstallmentResponseDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      loaPayInstallmentResponseDto0.setRemainingPrincipal(bigDecimal0);
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto1 = new LoaPayInstallmentResponseDto();
      assertFalse(loaPayInstallmentResponseDto1.equals((Object)loaPayInstallmentResponseDto0));
      
      loaPayInstallmentResponseDto1.setRemainingPrincipal(bigDecimal0);
      boolean boolean0 = loaPayInstallmentResponseDto0.equals(loaPayInstallmentResponseDto1);
      assertTrue(loaPayInstallmentResponseDto1.equals((Object)loaPayInstallmentResponseDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      BigInteger bigInteger0 = BigInteger.ONE;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, 1);
      loaPayInstallmentResponseDto0.setRemainingPrincipal(bigDecimal0);
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto1 = new LoaPayInstallmentResponseDto();
      boolean boolean0 = loaPayInstallmentResponseDto1.equals(loaPayInstallmentResponseDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      BigInteger bigInteger0 = BigInteger.ONE;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, 1);
      loaPayInstallmentResponseDto0.setRemainingPrincipal(bigDecimal0);
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto1 = new LoaPayInstallmentResponseDto();
      boolean boolean0 = loaPayInstallmentResponseDto0.equals(loaPayInstallmentResponseDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      loaPayInstallmentResponseDto0.setPaymentDate(localDate0);
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto1 = new LoaPayInstallmentResponseDto();
      assertFalse(loaPayInstallmentResponseDto1.equals((Object)loaPayInstallmentResponseDto0));
      
      loaPayInstallmentResponseDto1.setPaymentDate(localDate0);
      boolean boolean0 = loaPayInstallmentResponseDto1.equals(loaPayInstallmentResponseDto0);
      assertTrue(loaPayInstallmentResponseDto1.equals((Object)loaPayInstallmentResponseDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      LocalDate localDate0 = MockLocalDate.now();
      loaPayInstallmentResponseDto0.setPaymentDate(localDate0);
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto1 = new LoaPayInstallmentResponseDto();
      boolean boolean0 = loaPayInstallmentResponseDto1.equals(loaPayInstallmentResponseDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaPayInstallmentResponseDto0.setPaymentAmount(bigDecimal0);
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto1 = new LoaPayInstallmentResponseDto();
      assertFalse(loaPayInstallmentResponseDto1.equals((Object)loaPayInstallmentResponseDto0));
      
      loaPayInstallmentResponseDto1.setPaymentAmount(bigDecimal0);
      boolean boolean0 = loaPayInstallmentResponseDto0.equals(loaPayInstallmentResponseDto1);
      assertTrue(loaPayInstallmentResponseDto1.equals((Object)loaPayInstallmentResponseDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto1 = new LoaPayInstallmentResponseDto();
      assertTrue(loaPayInstallmentResponseDto1.equals((Object)loaPayInstallmentResponseDto0));
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaPayInstallmentResponseDto1.setPaymentAmount(bigDecimal0);
      boolean boolean0 = loaPayInstallmentResponseDto0.equals(loaPayInstallmentResponseDto1);
      assertFalse(loaPayInstallmentResponseDto1.equals((Object)loaPayInstallmentResponseDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto1 = new LoaPayInstallmentResponseDto();
      assertTrue(loaPayInstallmentResponseDto1.equals((Object)loaPayInstallmentResponseDto0));
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      loaPayInstallmentResponseDto1.setPaymentAmount(bigDecimal0);
      boolean boolean0 = loaPayInstallmentResponseDto1.equals(loaPayInstallmentResponseDto0);
      assertFalse(loaPayInstallmentResponseDto1.equals((Object)loaPayInstallmentResponseDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      Long long0 = new Long((-1795L));
      loaPayInstallmentResponseDto0.setLoanId(long0);
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto1 = new LoaPayInstallmentResponseDto();
      assertFalse(loaPayInstallmentResponseDto1.equals((Object)loaPayInstallmentResponseDto0));
      
      loaPayInstallmentResponseDto1.setLoanId(long0);
      boolean boolean0 = loaPayInstallmentResponseDto0.equals(loaPayInstallmentResponseDto1);
      assertTrue(loaPayInstallmentResponseDto1.equals((Object)loaPayInstallmentResponseDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      Long long0 = new Long(2473L);
      loaPayInstallmentResponseDto0.setLoanId(long0);
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto1 = new LoaPayInstallmentResponseDto();
      boolean boolean0 = loaPayInstallmentResponseDto0.equals(loaPayInstallmentResponseDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      Object object0 = new Object();
      boolean boolean0 = loaPayInstallmentResponseDto0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      boolean boolean0 = loaPayInstallmentResponseDto0.equals(loaPayInstallmentResponseDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaPayInstallmentResponseDto0.setRemainingPrincipal(bigDecimal0);
      loaPayInstallmentResponseDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      Month month0 = Month.APRIL;
      LocalDate localDate0 = MockLocalDate.of(1, month0, 1);
      loaPayInstallmentResponseDto0.setPaymentDate(localDate0);
      loaPayInstallmentResponseDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      Long long0 = new Long((-1520L));
      loaPayInstallmentResponseDto0.setLoanId(long0);
      loaPayInstallmentResponseDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      LocalDate localDate0 = MockLocalDate.now();
      loaPayInstallmentResponseDto0.setDueDate(localDate0);
      loaPayInstallmentResponseDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      Long long0 = new Long((-2936L));
      loaPayInstallmentResponseDto0.setLoanId(long0);
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto1 = new LoaPayInstallmentResponseDto();
      boolean boolean0 = loaPayInstallmentResponseDto1.equals(loaPayInstallmentResponseDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      LocalDate localDate0 = MockLocalDate.now();
      loaPayInstallmentResponseDto0.setPaymentDate(localDate0);
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto1 = new LoaPayInstallmentResponseDto();
      boolean boolean0 = loaPayInstallmentResponseDto0.equals(loaPayInstallmentResponseDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      String string0 = loaPayInstallmentResponseDto0.toString();
      assertEquals("LoaPayInstallmentResponseDto(loanId=null, paymentAmount=null, PaymentDate=null, remainingPrincipal=null, dueDate=null)", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LoaPayInstallmentResponseDto loaPayInstallmentResponseDto0 = new LoaPayInstallmentResponseDto();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      loaPayInstallmentResponseDto0.setPaymentAmount(bigDecimal0);
      loaPayInstallmentResponseDto0.hashCode();
  }
}
