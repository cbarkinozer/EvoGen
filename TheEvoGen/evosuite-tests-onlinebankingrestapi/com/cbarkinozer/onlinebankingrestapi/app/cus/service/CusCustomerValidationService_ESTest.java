/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:16:40 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.cus.service;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.cbarkinozer.onlinebankingrestapi.app.cus.entity.CusCustomer;
import com.cbarkinozer.onlinebankingrestapi.app.cus.service.entityservice.CusCustomerEntityService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CusCustomerValidationService_ESTest extends CusCustomerValidationService_ESTest_scaffolding {

    /**
     * Test controlIsIdentityNoUnique with a null CusCustomer object.
     * Expected to throw NullPointerException.
     */
    @Test(timeout = 4000)
    public void testControlIsIdentityNoUnique_WithNullCustomer_ShouldThrowNullPointerException() throws Throwable {
        CusCustomerValidationService validationService = new CusCustomerValidationService((CusCustomerEntityService) null);
        CusCustomer customer = new CusCustomer();
        try { 
            validationService.controlIsIdentityNoUnique(customer);
            fail("Expecting exception: NullPointerException");
        } catch(NullPointerException e) {
            verifyException("com.cbarkinozer.onlinebankingrestapi.app.cus.service.CusCustomerValidationService", e);
        }
    }

    /**
     * Test controlIsCustomerExist with a null customer ID.
     * Expected to throw NullPointerException.
     */
    @Test(timeout = 4000)
    public void testControlIsCustomerExist_WithNullId_ShouldThrowNullPointerException() throws Throwable {
        CusCustomerValidationService validationService = new CusCustomerValidationService((CusCustomerEntityService) null);
        try { 
            validationService.controlIsCustomerExist((Long) null);
            fail("Expecting exception: NullPointerException");
        } catch(NullPointerException e) {
            verifyException("com.cbarkinozer.onlinebankingrestapi.app.cus.service.CusCustomerValidationService", e);
        }
    }

    /**
     * Test controlAreFieldsNonNull with a customer having blank password.
     * Expected to throw RuntimeException.
     */
    @Test(timeout = 4000)
    public void testControlAreFieldsNonNull_WithBlankPassword_ShouldThrowRuntimeException() throws Throwable {
        CusCustomer customer = new CusCustomer();
        customer.setPassword("");
        customer.setIdentityNo(-1994L);
        customer.setName(":wKA(lC18'0p,QXE");
        customer.setSurname(":wKA(lC18'0p,QXE");
        CusCustomerValidationService validationService = new CusCustomerValidationService((CusCustomerEntityService) null);
        try { 
            validationService.controlAreFieldsNonNull(customer);
            fail("Expecting exception: RuntimeException");
        } catch(RuntimeException e) {
            verifyException("com.cbarkinozer.onlinebankingrestapi.app.cus.service.CusCustomerValidationService", e);
        }
    }

    /**
     * Test controlAreFieldsNonNull with a valid customer.
     * Expected to pass without exceptions.
     */
    @Test(timeout = 4000)
    public void testControlAreFieldsNonNull_WithValidCustomer_ShouldPass() throws Throwable {
        CusCustomerValidationService validationService = new CusCustomerValidationService((CusCustomerEntityService) null);
        Long identityNo = -189L;
        CusCustomer customer = new CusCustomer();
        customer.setPassword(":wKA(lC18'0p,QXE");
        customer.setIdentityNo(identityNo);
        customer.setName(":wKA(lC18'0p,QXE");
        customer.setSurname(":wKA(lC18'0p,QXE");
        validationService.controlAreFieldsNonNull(customer);
        assertNull(customer.getId());
    }

    /**
     * Test controlAreFieldsNonNull with a customer having null password.
     * Expected to throw NullPointerException.
     */
    @Test(timeout = 4000)
    public void testControlAreFieldsNonNull_WithNullPassword_ShouldThrowNullPointerException() throws Throwable {
        CusCustomerValidationService validationService = new CusCustomerValidationService((CusCustomerEntityService) null);
        Long identityNo = -189L;
        CusCustomer customer = new CusCustomer();
        customer.setIdentityNo(identityNo);
        customer.setName(":wKA(lC18'0p,QXE");
        customer.setSurname(":wKA(lC18'0p,QXE");
        try { 
            validationService.controlAreFieldsNonNull(customer);
            fail("Expecting exception: NullPointerException");
        } catch(NullPointerException e) {
            verifyException("com.cbarkinozer.onlinebankingrestapi.app.cus.service.CusCustomerValidationService", e);
        }
    }

    /**
     * Test controlAreFieldsNonNull with a customer having null identityNo, name, and surname.
     * Expected to throw RuntimeException.
     */
    @Test(timeout = 4000)
    public void testControlAreFieldsNonNull_WithNullIdentityNo_ShouldThrowRuntimeException() throws Throwable {
        CusCustomerValidationService validationService = new CusCustomerValidationService((CusCustomerEntityService) null);
        CusCustomer customer = new CusCustomer();
        customer.setName(":wKA(lC18'0p,QXE");
        customer.setSurname(":wKA(lC18'0p,QXE");
        try { 
            validationService.controlAreFieldsNonNull(customer);
            fail("Expecting exception: RuntimeException");
        } catch(RuntimeException e) {
            verifyException("com.cbarkinozer.onlinebankingrestapi.app.cus.service.CusCustomerValidationService", e);
        }
    }

    /**
     * Test controlAreFieldsNonNull with a customer having blank name and surname.
     * Expected to throw RuntimeException.
     */
    @Test(timeout = 4000)
    public void testControlAreFieldsNonNull_WithBlankNameAndSurname_ShouldThrowRuntimeException() throws Throwable {
        CusCustomerValidationService validationService = new CusCustomerValidationService((CusCustomerEntityService) null);
        CusCustomer customer = new CusCustomer();
        customer.setName("I ");
        customer.setSurname(" ");
        try { 
            validationService.controlAreFieldsNonNull(customer);
            fail("Expecting exception: RuntimeException");
        } catch(RuntimeException e) {
            verifyException("com.cbarkinozer.onlinebankingrestapi.app.cus.service.CusCustomerValidationService", e);
        }
    }

    /**
     * Test controlAreFieldsNonNull with a customer having empty name.
     * Expected to throw RuntimeException.
     */
    @Test(timeout = 4000)
    public void testControlAreFieldsNonNull_WithEmptyName_ShouldThrowRuntimeException() throws Throwable {
        CusCustomerValidationService validationService = new CusCustomerValidationService((CusCustomerEntityService) null);
        CusCustomer customer = new CusCustomer();
        customer.setName("");
        try { 
            validationService.controlAreFieldsNonNull(customer);
            fail("Expecting exception: RuntimeException");
        } catch(RuntimeException e) {
            verifyException("com.cbarkinozer.onlinebankingrestapi.app.cus.service.CusCustomerValidationService", e);
        }
    }
}