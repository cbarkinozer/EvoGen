/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:13:30 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.crd.enums;

import org.junit.Test;
import static org.junit.Assert.*;
import com.cbarkinozer.onlinebankingrestapi.app.crd.enums.CrdErrorMessage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CrdErrorMessage_ESTest extends CrdErrorMessage_ESTest_scaffolding {

    /**
     * Test that the enum contains all expected values.
     */
    @Test(timeout = 4000)
    public void testValues_ShouldReturnAllEnumValues() throws Throwable {
        CrdErrorMessage[] errorMessages = CrdErrorMessage.values();
        assertEquals(9, errorMessages.length);
    }

    /**
     * Test retrieving a specific enum value by name and verify its detail message.
     */
    @Test(timeout = 4000)
    public void testValueOf_WithValidEnumName_ShouldReturnCorrectEnum() throws Throwable {
        CrdErrorMessage errorMessage = CrdErrorMessage.valueOf("CREDIT_CARD_NOT_FOUND");
        assertEquals("Please be sure that your credit card id belongs to a credit card.", errorMessage.getDetailMessage());
    }

    /**
     * Test getting the detail message of a specific enum value.
     */
    @Test(timeout = 4000)
    public void testGetDetailMessage_WithParameterMinCannotBeLargerThanMax_ShouldReturnCorrectMessage() throws Throwable {
        CrdErrorMessage errorMessage = CrdErrorMessage.PARAMETER_MIN_CANNOT_BE_LARGER_THAN_MAX;
        String detailMessage = errorMessage.getDetailMessage();
        assertEquals("Please be sure that parameter min is not larger than max", detailMessage);
    }

    /**
     * Test getting the message of a specific enum value.
     */
    @Test(timeout = 4000)
    public void testGetMessage_WithEarningCannotBeNegative_ShouldReturnCorrectMessage() throws Throwable {
        CrdErrorMessage errorMessage = CrdErrorMessage.EARNING_CANNOT_BE_NEGATIVE;
        String message = errorMessage.getMessage();
        assertEquals("Earning cannot be negative", message);
    }
}