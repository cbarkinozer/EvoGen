/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:12:29 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.crd.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import com.cbarkinozer.onlinebankingrestapi.app.crd.entity.CrdCreditCardActivity;
import com.cbarkinozer.onlinebankingrestapi.app.crd.enums.CrdCreditCardActivityType;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.time.ZoneOffset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CrdCreditCardActivity_ESTest extends CrdCreditCardActivity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalDateTime localDateTime0 = MockLocalDateTime.ofEpochSecond(0L, 1, zoneOffset0);
      crdCreditCardActivity0.setTransactionDate(localDateTime0);
      LocalDateTime localDateTime1 = crdCreditCardActivity0.getTransactionDate();
      assertSame(localDateTime1, localDateTime0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      Long long0 = new Long(0L);
      crdCreditCardActivity0.setId(long0);
      Long long1 = crdCreditCardActivity0.getId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      Long long0 = new Long((-2964L));
      crdCreditCardActivity0.setId(long0);
      Long long1 = crdCreditCardActivity0.getId();
      assertEquals((-2964L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      crdCreditCardActivity0.setDescription("<");
      String string0 = crdCreditCardActivity0.getDescription();
      assertEquals("<", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      Long long0 = new Long(0L);
      crdCreditCardActivity0.setCrdCreditCardId(long0);
      Long long1 = crdCreditCardActivity0.getCrdCreditCardId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      Long long0 = Long.getLong("", (long) 1);
      crdCreditCardActivity0.setCrdCreditCardId(long0);
      Long long1 = crdCreditCardActivity0.getCrdCreditCardId();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      crdCreditCardActivity0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = crdCreditCardActivity0.getAmount();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      BigDecimal bigDecimal0 = new BigDecimal(1245);
      crdCreditCardActivity0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = crdCreditCardActivity0.getAmount();
      assertEquals((short)1245, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      Long long0 = new Long(1516L);
      crdCreditCardActivity0.setId(long0);
      Long long1 = crdCreditCardActivity0.getId();
      assertEquals(1516L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      BigDecimal bigDecimal0 = new BigDecimal((-3214L));
      crdCreditCardActivity0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = crdCreditCardActivity0.getAmount();
      assertEquals((byte)114, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      crdCreditCardActivity0.setDescription("");
      String string0 = crdCreditCardActivity0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      crdCreditCardActivity0.getCardActivityType();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      Long long0 = crdCreditCardActivity0.getCrdCreditCardId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      LocalDateTime localDateTime0 = crdCreditCardActivity0.getTransactionDate();
      assertNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      Long long0 = crdCreditCardActivity0.getId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      BigDecimal bigDecimal0 = crdCreditCardActivity0.getAmount();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      Long long0 = new Long((-802L));
      crdCreditCardActivity0.setCrdCreditCardId(long0);
      Long long1 = crdCreditCardActivity0.getCrdCreditCardId();
      assertEquals((-802L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      crdCreditCardActivity0.setCardActivityType(crdCreditCardActivityType0);
      CrdCreditCardActivityType crdCreditCardActivityType1 = crdCreditCardActivity0.getCardActivityType();
      assertSame(crdCreditCardActivityType1, crdCreditCardActivityType0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CrdCreditCardActivity crdCreditCardActivity0 = new CrdCreditCardActivity();
      String string0 = crdCreditCardActivity0.getDescription();
      assertNull(string0);
  }
}
