/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:10:49 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.crd.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import com.cbarkinozer.onlinebankingrestapi.app.crd.dto.CrdCreditCardActivityAnalysisDto;
import com.cbarkinozer.onlinebankingrestapi.app.crd.enums.CrdCreditCardActivityType;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CrdCreditCardActivityAnalysisDto_ESTest extends CrdCreditCardActivityAnalysisDto_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Double double0 = new Double(0.0);
      Long long0 = new Long(1L);
      BigDecimal bigDecimal1 = BigDecimal.ONE;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal1, double0, long0);
      crdCreditCardActivityAnalysisDto0.hashCode();
      assertEquals("CrdCreditCardActivityAnalysisDto(activityType=PAYMENT, minAmount=10, maxAmount=1, avgAmount=0.0, activityCount=1)", crdCreditCardActivityAnalysisDto0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      Double double0 = new Double(0.0);
      Long long0 = new Long(136L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, (BigDecimal) null, (BigDecimal) null, double0, long0);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      crdCreditCardActivityAnalysisDto0.setMinAmount(bigDecimal0);
      crdCreditCardActivityAnalysisDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      Double double0 = new Double((-447.8833242532495));
      Long long0 = new Long(1L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, (BigDecimal) null, (BigDecimal) null, double0, long0);
      BigDecimal bigDecimal0 = crdCreditCardActivityAnalysisDto0.getMinAmount();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      BigDecimal bigDecimal0 = new BigDecimal(1L);
      Double double0 = new Double(1L);
      Long long0 = new Long(1L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, long0);
      BigDecimal bigDecimal1 = crdCreditCardActivityAnalysisDto0.getMinAmount();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Double double0 = new Double(0.0);
      Long long0 = new Long(0L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, long0);
      BigDecimal bigDecimal1 = crdCreditCardActivityAnalysisDto0.getMinAmount();
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      Double double0 = new Double((-1.0));
      Long long0 = new Long(1332L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, long0);
      BigDecimal bigDecimal1 = new BigDecimal((-734));
      crdCreditCardActivityAnalysisDto0.setMinAmount(bigDecimal1);
      BigDecimal bigDecimal2 = crdCreditCardActivityAnalysisDto0.getMinAmount();
      assertEquals((short) (-734), bigDecimal2.shortValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      Double double0 = new Double(0.0);
      Long long0 = new Long(136L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, (BigDecimal) null, (BigDecimal) null, double0, long0);
      BigDecimal bigDecimal0 = crdCreditCardActivityAnalysisDto0.getMaxAmount();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      Double double0 = new Double((-1786.2));
      Long long0 = new Long((-1L));
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, long0);
      BigDecimal bigDecimal1 = crdCreditCardActivityAnalysisDto0.getMaxAmount();
      assertEquals((byte) (-1), bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      Double double0 = new Double((-1.0));
      Long long0 = new Long(1332L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, long0);
      BigDecimal bigDecimal1 = crdCreditCardActivityAnalysisDto0.getMaxAmount();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      BigDecimal bigDecimal0 = new BigDecimal(3228.82575929);
      Double double0 = Double.valueOf(3228.82575929);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, (Long) null);
      BigDecimal bigDecimal1 = crdCreditCardActivityAnalysisDto0.getMaxAmount();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Double double0 = new Double(0.0);
      Long long0 = new Long(0L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, long0);
      Double double1 = crdCreditCardActivityAnalysisDto0.getAvgAmount();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Long long0 = new Long(1L);
      Double double0 = new Double(2960.6495293789035);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, long0);
      Double double1 = crdCreditCardActivityAnalysisDto0.getAvgAmount();
      assertEquals(2960.6495293789035, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      BigDecimal bigDecimal0 = new BigDecimal((-392.1731132799));
      Long long0 = new Long((-252L));
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, (Double) null, long0);
      Double double0 = crdCreditCardActivityAnalysisDto0.getAvgAmount();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto((CrdCreditCardActivityType) null, bigDecimal0, bigDecimal0, (Double) null, (Long) null);
      crdCreditCardActivityAnalysisDto0.getActivityType();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      Double double0 = new Double(0L);
      Long long0 = new Long(0L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, long0);
      Long long1 = crdCreditCardActivityAnalysisDto0.getActivityCount();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      Double double0 = new Double((-1.0));
      Long long0 = new Long(1332L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, long0);
      Long long1 = crdCreditCardActivityAnalysisDto0.getActivityCount();
      assertEquals(1332L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.SPEND;
      BigDecimal bigDecimal0 = new BigDecimal(806);
      Double double0 = new Double(3179.6580214944);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, (Long) null);
      Long long0 = crdCreditCardActivityAnalysisDto0.getActivityCount();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      Double double0 = new Double(0L);
      Long long0 = new Long(0L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, long0);
      boolean boolean0 = crdCreditCardActivityAnalysisDto0.canEqual(crdCreditCardActivityAnalysisDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      Double double0 = new Double(0.0);
      Long long0 = new Long(136L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, (BigDecimal) null, (BigDecimal) null, double0, long0);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      boolean boolean0 = crdCreditCardActivityAnalysisDto0.canEqual(bigDecimal0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      Double double0 = new Double((-1.0));
      Long long0 = new Long(1332L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, long0);
      Double double1 = crdCreditCardActivityAnalysisDto0.getAvgAmount();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      Double double0 = new Double((-1786.2));
      Long long0 = new Long((-1L));
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, long0);
      BigDecimal bigDecimal1 = crdCreditCardActivityAnalysisDto0.getMinAmount();
      assertEquals((short) (-1), bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      Double double0 = new Double((-1786.2));
      Long long0 = new Long((-1L));
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, long0);
      CrdCreditCardActivityType crdCreditCardActivityType1 = crdCreditCardActivityAnalysisDto0.getActivityType();
      assertEquals(CrdCreditCardActivityType.PAYMENT, crdCreditCardActivityType1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      Double double0 = new Double((-1786.2));
      Long long0 = new Long((-1L));
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, long0);
      Long long1 = crdCreditCardActivityAnalysisDto0.getActivityCount();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Double double0 = new Double(0.0);
      Long long0 = new Long(1L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, long0);
      BigDecimal bigDecimal1 = crdCreditCardActivityAnalysisDto0.getMaxAmount();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, (BigDecimal) null, (BigDecimal) null, (Double) null, (Long) null);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto1 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, (BigDecimal) null, (BigDecimal) null, (Double) null, (Long) null);
      boolean boolean0 = crdCreditCardActivityAnalysisDto1.equals(crdCreditCardActivityAnalysisDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      BigDecimal bigDecimal0 = new BigDecimal((-392.1731132799));
      BigDecimal bigDecimal1 = BigDecimal.ONE;
      Long long0 = new Long(0L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal1, bigDecimal0, (Double) null, long0);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto1 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, (Double) null, long0);
      boolean boolean0 = crdCreditCardActivityAnalysisDto0.equals(crdCreditCardActivityAnalysisDto1);
      assertEquals("CrdCreditCardActivityAnalysisDto(activityType=REFUND, minAmount=1, maxAmount=-392.17311327990000791032798588275909423828125, avgAmount=null, activityCount=0)", crdCreditCardActivityAnalysisDto0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      BigInteger bigInteger0 = BigInteger.TEN;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, (BigDecimal) null, (BigDecimal) null, (Double) null, (Long) null);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto1 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, (Double) null, (Long) null);
      crdCreditCardActivityAnalysisDto1.setMinAmount((BigDecimal) null);
      boolean boolean0 = crdCreditCardActivityAnalysisDto0.equals(crdCreditCardActivityAnalysisDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      BigInteger bigInteger0 = BigInteger.TEN;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, (BigDecimal) null, (BigDecimal) null, (Double) null, (Long) null);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto1 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, (Double) null, (Long) null);
      boolean boolean0 = crdCreditCardActivityAnalysisDto0.equals(crdCreditCardActivityAnalysisDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, (Double) null, (Long) null);
      CrdCreditCardActivityType crdCreditCardActivityType1 = CrdCreditCardActivityType.SPEND;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto1 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType1, bigDecimal0, bigDecimal0, (Double) null, (Long) null);
      boolean boolean0 = crdCreditCardActivityAnalysisDto0.equals(crdCreditCardActivityAnalysisDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto((CrdCreditCardActivityType) null, bigDecimal0, bigDecimal0, (Double) null, (Long) null);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto1 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, (Double) null, (Long) null);
      assertFalse(crdCreditCardActivityAnalysisDto1.equals((Object)crdCreditCardActivityAnalysisDto0));
      
      crdCreditCardActivityAnalysisDto1.setActivityType((CrdCreditCardActivityType) null);
      boolean boolean0 = crdCreditCardActivityAnalysisDto0.equals(crdCreditCardActivityAnalysisDto1);
      assertTrue(crdCreditCardActivityAnalysisDto1.equals((Object)crdCreditCardActivityAnalysisDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto((CrdCreditCardActivityType) null, bigDecimal0, bigDecimal0, (Double) null, (Long) null);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto1 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, (Double) null, (Long) null);
      boolean boolean0 = crdCreditCardActivityAnalysisDto0.equals(crdCreditCardActivityAnalysisDto1);
      assertFalse(boolean0);
      assertFalse(crdCreditCardActivityAnalysisDto1.equals((Object)crdCreditCardActivityAnalysisDto0));
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, (Double) null, (Long) null);
      Long long0 = new Long(54L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto1 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, (Double) null, long0);
      boolean boolean0 = crdCreditCardActivityAnalysisDto1.equals(crdCreditCardActivityAnalysisDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, (Double) null, (Long) null);
      Double double0 = new Double((-1406.8080702058));
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto1 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, (Long) null);
      boolean boolean0 = crdCreditCardActivityAnalysisDto1.equals(crdCreditCardActivityAnalysisDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, (Double) null, (Long) null);
      Double double0 = new Double(5949.552257);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto1 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, (Long) null);
      boolean boolean0 = crdCreditCardActivityAnalysisDto0.equals(crdCreditCardActivityAnalysisDto1);
      assertFalse(boolean0);
      assertFalse(crdCreditCardActivityAnalysisDto1.equals((Object)crdCreditCardActivityAnalysisDto0));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Double double0 = new Double(1310.2);
      Long long0 = new Long((-2398L));
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, long0);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto1 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, double0, (Long) null);
      boolean boolean0 = crdCreditCardActivityAnalysisDto1.equals(crdCreditCardActivityAnalysisDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto((CrdCreditCardActivityType) null, bigDecimal0, bigDecimal0, (Double) null, (Long) null);
      Object object0 = new Object();
      boolean boolean0 = crdCreditCardActivityAnalysisDto0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      BigDecimal bigDecimal0 = new BigDecimal((-392.1731132799));
      Long long0 = new Long((-252L));
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, (Double) null, long0);
      boolean boolean0 = crdCreditCardActivityAnalysisDto0.equals(crdCreditCardActivityAnalysisDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto((CrdCreditCardActivityType) null, bigDecimal0, bigDecimal0, (Double) null, (Long) null);
      crdCreditCardActivityAnalysisDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, (BigDecimal) null, (BigDecimal) null, (Double) null, (Long) null);
      crdCreditCardActivityAnalysisDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      BigDecimal bigDecimal0 = new BigDecimal((-392.1731132799));
      Long long0 = new Long(0L);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, (Double) null, long0);
      crdCreditCardActivityAnalysisDto0.setActivityCount(long0);
      assertNull(crdCreditCardActivityAnalysisDto0.getAvgAmount());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto((CrdCreditCardActivityType) null, bigDecimal0, bigDecimal0, (Double) null, (Long) null);
      String string0 = crdCreditCardActivityAnalysisDto0.toString();
      assertEquals("CrdCreditCardActivityAnalysisDto(activityType=null, minAmount=1, maxAmount=1, avgAmount=null, activityCount=null)", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      BigInteger bigInteger0 = BigInteger.TEN;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, (BigDecimal) null, (Double) null, (Long) null);
      crdCreditCardActivityAnalysisDto0.setMaxAmount((BigDecimal) null);
      assertEquals("CrdCreditCardActivityAnalysisDto(activityType=REFUND, minAmount=10, maxAmount=null, avgAmount=null, activityCount=null)", crdCreditCardActivityAnalysisDto0.toString());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.REFUND;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, (BigDecimal) null, (BigDecimal) null, (Double) null, (Long) null);
      crdCreditCardActivityAnalysisDto0.setAvgAmount((Double) null);
      assertEquals("CrdCreditCardActivityAnalysisDto(activityType=REFUND, minAmount=null, maxAmount=null, avgAmount=null, activityCount=null)", crdCreditCardActivityAnalysisDto0.toString());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CrdCreditCardActivityType crdCreditCardActivityType0 = CrdCreditCardActivityType.PAYMENT;
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto0 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, (BigDecimal) null, (Double) null, (Long) null);
      CrdCreditCardActivityAnalysisDto crdCreditCardActivityAnalysisDto1 = new CrdCreditCardActivityAnalysisDto(crdCreditCardActivityType0, bigDecimal0, bigDecimal0, (Double) null, (Long) null);
      boolean boolean0 = crdCreditCardActivityAnalysisDto1.equals(crdCreditCardActivityAnalysisDto0);
      assertFalse(boolean0);
      assertEquals("CrdCreditCardActivityAnalysisDto(activityType=PAYMENT, minAmount=1, maxAmount=null, avgAmount=null, activityCount=null)", crdCreditCardActivityAnalysisDto0.toString());
  }
}
