/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:17:40 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.gen.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import com.cbarkinozer.onlinebankingrestapi.app.gen.exception.GenExceptionResponse;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GenExceptionResponse_ESTest extends GenExceptionResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse((Date) null, "{{&KJdy{", "{{&KJdy{");
      genExceptionResponse0.setMessage((String) null);
      String string0 = genExceptionResponse0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse((Date) null, "~P*", "~P*");
      String string0 = genExceptionResponse0.getMessage();
      assertEquals("~P*", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse((Date) null, "{{&KJdy{", "{{&KJdy{");
      Date date0 = genExceptionResponse0.getErrorDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 0);
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse(mockDate0, "E oub0y9", "E oub0y9");
      genExceptionResponse0.setDetail((String) null);
      String string0 = genExceptionResponse0.getDetail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockDate mockDate0 = new MockDate(3284, 0, 3284, 3284, 3284);
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse(mockDate0, "", "N;KGceDlU");
      genExceptionResponse0.getDetail();
      assertEquals("GenExceptionResponse(errorDate=Sat May 15 02:44:00 GMT 5193, message=, detail=N;KGceDlU)", genExceptionResponse0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse((Date) null, "~P*", "~P*");
      boolean boolean0 = genExceptionResponse0.canEqual(genExceptionResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockDate mockDate0 = new MockDate(3284, 0, 3284, 3284, 3284);
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse(mockDate0, "", "");
      Object object0 = new Object();
      boolean boolean0 = genExceptionResponse0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockDate mockDate0 = new MockDate(3284, 0, 3284, 3284, 3284);
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse(mockDate0, "", "");
      String string0 = genExceptionResponse0.getDetail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockDate mockDate0 = new MockDate(3284, 0, 3284, 3284, 3284);
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse(mockDate0, "", "");
      Date date0 = genExceptionResponse0.getErrorDate();
      assertSame(mockDate0, date0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockDate mockDate0 = new MockDate(3284, 0, 3284, 3284, 3284);
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse(mockDate0, "", "");
      String string0 = genExceptionResponse0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse(mockDate0, (String) null, (String) null);
      GenExceptionResponse genExceptionResponse1 = new GenExceptionResponse(mockDate0, (String) null, (String) null);
      boolean boolean0 = genExceptionResponse0.equals(genExceptionResponse1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse(mockDate0, (String) null, (String) null);
      GenExceptionResponse genExceptionResponse1 = new GenExceptionResponse(mockDate0, (String) null, "");
      boolean boolean0 = genExceptionResponse0.equals(genExceptionResponse1);
      assertFalse(genExceptionResponse1.equals((Object)genExceptionResponse0));
      assertFalse(boolean0);
      assertEquals("GenExceptionResponse(errorDate=Fri Feb 14 20:21:21 GMT 2014, message=null, detail=)", genExceptionResponse1.toString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 0, 0, (-981), 43, 43);
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse(mockDate0, "", "#g@oOMf%");
      GenExceptionResponse genExceptionResponse1 = new GenExceptionResponse(mockDate0, "", "");
      boolean boolean0 = genExceptionResponse0.equals(genExceptionResponse1);
      assertFalse(genExceptionResponse1.equals((Object)genExceptionResponse0));
      assertEquals("", genExceptionResponse0.getMessage());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse(mockDate0, (String) null, "");
      GenExceptionResponse genExceptionResponse1 = new GenExceptionResponse(mockDate0, (String) null, "");
      boolean boolean0 = genExceptionResponse0.equals(genExceptionResponse1);
      assertEquals("GenExceptionResponse(errorDate=Fri Feb 14 20:21:21 GMT 2014, message=null, detail=)", genExceptionResponse1.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 0, 0, (-981), 43, 43);
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse(mockDate0, (String) null, "");
      GenExceptionResponse genExceptionResponse1 = new GenExceptionResponse(mockDate0, "", "#g@oOMf%");
      boolean boolean0 = genExceptionResponse1.equals(genExceptionResponse0);
      assertFalse(boolean0);
      assertEquals("GenExceptionResponse(errorDate=Mon Nov 20 03:43:43 GMT 1899, message=, detail=#g@oOMf%)", genExceptionResponse1.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse(mockDate0, (String) null, (String) null);
      GenExceptionResponse genExceptionResponse1 = new GenExceptionResponse((Date) null, (String) null, (String) null);
      boolean boolean0 = genExceptionResponse0.equals(genExceptionResponse1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse((Date) null, (String) null, (String) null);
      GenExceptionResponse genExceptionResponse1 = new GenExceptionResponse(mockDate0, (String) null, (String) null);
      boolean boolean0 = genExceptionResponse0.equals(genExceptionResponse1);
      assertFalse(genExceptionResponse1.equals((Object)genExceptionResponse0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse((Date) null, (String) null, (String) null);
      GenExceptionResponse genExceptionResponse1 = new GenExceptionResponse((Date) null, "", "");
      boolean boolean0 = genExceptionResponse0.equals(genExceptionResponse1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse((Date) null, "", "");
      Object object0 = new Object();
      boolean boolean0 = genExceptionResponse0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse((Date) null, "", "");
      boolean boolean0 = genExceptionResponse0.equals(genExceptionResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse((Date) null, (String) null, (String) null);
      genExceptionResponse0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse((Date) null, (String) null, "com.cbarkinozer.onlinebankingrestapi.app.gen.exception.GenExceptionResponse");
      genExceptionResponse0.hashCode();
      assertEquals("GenExceptionResponse(errorDate=null, message=null, detail=com.cbarkinozer.onlinebankingrestapi.app.gen.exception.GenExceptionResponse)", genExceptionResponse0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse((Date) null, "{{&KJdy{", "{{&KJdy{");
      genExceptionResponse0.hashCode();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1252), 0, 0, 0, 0);
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse(mockDate0, "", "f#OE");
      genExceptionResponse0.hashCode();
      assertEquals("GenExceptionResponse(errorDate=Mon Dec 31 00:00:00 GMT 647, message=, detail=f#OE)", genExceptionResponse0.toString());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse((Date) null, "", "");
      String string0 = genExceptionResponse0.toString();
      assertEquals("GenExceptionResponse(errorDate=null, message=, detail=)", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 0, 0, (-981), 43, 43);
      GenExceptionResponse genExceptionResponse0 = new GenExceptionResponse(mockDate0, (String) null, "");
      genExceptionResponse0.setErrorDate(mockDate0);
      assertEquals("GenExceptionResponse(errorDate=Mon Nov 20 03:43:43 GMT 1899, message=null, detail=)", genExceptionResponse0.toString());
  }
}
