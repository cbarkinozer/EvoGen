/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 21 21:16:57 GMT 2025
 */

package com.cbarkinozer.onlinebankingrestapi.app.gen.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import com.cbarkinozer.onlinebankingrestapi.app.gen.dto.RestResponse;
import java.time.chrono.ChronoLocalDate;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RestResponse_ESTest extends RestResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      RestResponse<Object> restResponse0 = new RestResponse<Object>(object0, (Date) null, true, "");
      boolean boolean0 = restResponse0.isSuccess();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RestResponse<Object> restResponse0 = new RestResponse<Object>();
      Date date0 = restResponse0.getResponseDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer((-2465));
      RestResponse<Integer> restResponse0 = RestResponse.error(integer0);
      restResponse0.setMessages("WGb");
      restResponse0.getMessages();
      assertEquals("RestResponse(data=-2465, responseDate=Fri Feb 14 20:21:21 GMT 2014, isSuccess=false, messages=WGb)", restResponse0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = new Object();
      RestResponse<Object> restResponse0 = new RestResponse<Object>(object0, false);
      restResponse0.setMessages("");
      restResponse0.getMessages();
      assertFalse(restResponse0.isSuccess());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer((-1627));
      RestResponse<Integer> restResponse0 = RestResponse.error(integer0);
      restResponse0.setMessages("y@)");
      restResponse0.getMessage();
      assertEquals("RestResponse(data=-1627, responseDate=Fri Feb 14 20:21:21 GMT 2014, isSuccess=false, messages=y@))", restResponse0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object object0 = new Object();
      RestResponse<Object> restResponse0 = RestResponse.error(object0);
      restResponse0.setMessages("");
      restResponse0.getMessage();
      assertFalse(restResponse0.isSuccess());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RestResponse<ChronoLocalDate> restResponse0 = RestResponse.error((ChronoLocalDate) null);
      RestResponse<Object> restResponse1 = RestResponse.of((Object) restResponse0);
      RestResponse<Integer> restResponse2 = new RestResponse<Integer>();
      restResponse2.canEqual(restResponse1);
      assertEquals("RestResponse(data=RestResponse(data=null, responseDate=Fri Feb 14 20:21:21 GMT 2014, isSuccess=false, messages=null), responseDate=Fri Feb 14 20:21:21 GMT 2014, isSuccess=true, messages=null)", restResponse1.toString());
      assertEquals("RestResponse(data=null, responseDate=Fri Feb 14 20:21:21 GMT 2014, isSuccess=false, messages=null)", restResponse0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RestResponse<Object> restResponse0 = new RestResponse<Object>();
      Integer integer0 = new Integer((-2465));
      boolean boolean0 = restResponse0.canEqual(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RestResponse<Object> restResponse0 = new RestResponse<Object>();
      Object object0 = new Object();
      boolean boolean0 = restResponse0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RestResponse<Object> restResponse0 = new RestResponse<Object>();
      String string0 = restResponse0.getMessages();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RestResponse<ChronoLocalDate> restResponse0 = RestResponse.error((ChronoLocalDate) null);
      boolean boolean0 = restResponse0.isSuccess();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RestResponse<Object> restResponse0 = RestResponse.empty();
      restResponse0.getResponseDate();
      assertEquals("RestResponse(data=null, responseDate=Fri Feb 14 20:21:21 GMT 2014, isSuccess=true, messages=null)", restResponse0.toString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RestResponse<Object> restResponse0 = new RestResponse<Object>();
      Object object0 = restResponse0.getData();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RestResponse<Object> restResponse0 = new RestResponse<Object>();
      RestResponse<Integer> restResponse1 = new RestResponse<Integer>();
      restResponse0.setMessages("");
      restResponse1.setMessages("");
      boolean boolean0 = restResponse1.equals(restResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RestResponse<Object> restResponse0 = new RestResponse<Object>();
      restResponse0.setMessages("1\"m&Q}r-O+t5gkZ$");
      RestResponse<Integer> restResponse1 = new RestResponse<Integer>();
      boolean boolean0 = restResponse1.equals(restResponse0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RestResponse<Object> restResponse0 = new RestResponse<Object>();
      RestResponse<Integer> restResponse1 = new RestResponse<Integer>();
      restResponse1.setMessages("");
      boolean boolean0 = restResponse1.equals(restResponse0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RestResponse<Object> restResponse0 = new RestResponse<Object>();
      RestResponse<Integer> restResponse1 = RestResponse.error((Integer) null);
      boolean boolean0 = restResponse1.equals(restResponse0);
      assertFalse(boolean0);
      assertEquals("RestResponse(data=null, responseDate=Fri Feb 14 20:21:21 GMT 2014, isSuccess=false, messages=null)", restResponse1.toString());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RestResponse<Object> restResponse0 = new RestResponse<Object>();
      RestResponse<Integer> restResponse1 = new RestResponse<Integer>();
      boolean boolean0 = restResponse1.equals(restResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RestResponse<Integer> restResponse0 = new RestResponse<Integer>();
      RestResponse<Integer> restResponse1 = RestResponse.error((Integer) null);
      boolean boolean0 = restResponse0.equals(restResponse1);
      assertFalse(boolean0);
      assertFalse(restResponse1.equals((Object)restResponse0));
      assertFalse(restResponse1.isSuccess());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RestResponse<Object> restResponse0 = new RestResponse<Object>();
      RestResponse<RestResponse<Object>> restResponse1 = RestResponse.error(restResponse0);
      RestResponse<RestResponse<Object>> restResponse2 = RestResponse.error(restResponse0);
      boolean boolean0 = restResponse1.equals(restResponse2);
      assertTrue(boolean0);
      assertFalse(restResponse2.isSuccess());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RestResponse<Integer> restResponse0 = new RestResponse<Integer>();
      RestResponse<Object> restResponse1 = RestResponse.error((Object) restResponse0);
      boolean boolean0 = restResponse0.equals(restResponse1);
      assertFalse(boolean0);
      assertEquals("RestResponse(data=RestResponse(data=null, responseDate=null, isSuccess=false, messages=null), responseDate=Fri Feb 14 20:21:21 GMT 2014, isSuccess=false, messages=null)", restResponse1.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RestResponse<Object> restResponse0 = new RestResponse<Object>();
      RestResponse<Integer> restResponse1 = RestResponse.empty();
      boolean boolean0 = restResponse1.equals(restResponse0);
      assertFalse(boolean0);
      assertEquals("RestResponse(data=null, responseDate=Fri Feb 14 20:21:21 GMT 2014, isSuccess=true, messages=null)", restResponse1.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RestResponse<Integer> restResponse0 = new RestResponse<Integer>();
      RestResponse<Object> restResponse1 = RestResponse.error((Object) restResponse0);
      boolean boolean0 = restResponse1.equals(restResponse0);
      assertFalse(boolean0);
      assertFalse(restResponse1.isSuccess());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RestResponse<Object> restResponse0 = new RestResponse<Object>();
      RestResponse<RestResponse<Object>> restResponse1 = RestResponse.error(restResponse0);
      boolean boolean0 = restResponse1.equals(restResponse1);
      assertTrue(boolean0);
      assertEquals("RestResponse(data=RestResponse(data=null, responseDate=null, isSuccess=false, messages=null), responseDate=Fri Feb 14 20:21:21 GMT 2014, isSuccess=false, messages=null)", restResponse1.toString());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = new Integer(615);
      MockDate mockDate0 = new MockDate((-1L));
      RestResponse<Integer> restResponse0 = new RestResponse<Integer>(integer0, mockDate0, false, "com.cbarkinozer.onlinebankingrestapi.app.gen.dto.RestResponse");
      restResponse0.hashCode();
      assertFalse(restResponse0.isSuccess());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RestResponse<ChronoLocalDate> restResponse0 = new RestResponse<ChronoLocalDate>();
      restResponse0.setSuccess(true);
      restResponse0.hashCode();
      assertTrue(restResponse0.isSuccess());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RestResponse<ChronoLocalDate> restResponse0 = RestResponse.error((ChronoLocalDate) null);
      restResponse0.getMessage();
      assertFalse(restResponse0.isSuccess());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RestResponse<Integer> restResponse0 = new RestResponse<Integer>();
      Integer integer0 = new Integer(0);
      restResponse0.setData(integer0);
      assertEquals("RestResponse(data=0, responseDate=null, isSuccess=false, messages=null)", restResponse0.toString());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RestResponse<Integer> restResponse0 = RestResponse.empty();
      MockDate mockDate0 = new MockDate();
      restResponse0.setResponseDate(mockDate0);
      assertTrue(restResponse0.isSuccess());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RestResponse<Integer> restResponse0 = new RestResponse<Integer>();
      MockDate mockDate0 = new MockDate(1234L);
      RestResponse<Object> restResponse1 = new RestResponse<Object>(restResponse0, mockDate0, false, "R3FD{RPLoL%P\"^y8");
      restResponse1.getData();
      assertEquals("RestResponse(data=RestResponse(data=null, responseDate=null, isSuccess=false, messages=null), responseDate=Thu Jan 01 00:00:01 GMT 1970, isSuccess=false, messages=R3FD{RPLoL%P\"^y8)", restResponse1.toString());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RestResponse<ChronoLocalDate> restResponse0 = RestResponse.error((ChronoLocalDate) null);
      String string0 = restResponse0.toString();
      assertEquals("RestResponse(data=null, responseDate=Fri Feb 14 20:21:21 GMT 2014, isSuccess=false, messages=null)", string0);
  }
}
